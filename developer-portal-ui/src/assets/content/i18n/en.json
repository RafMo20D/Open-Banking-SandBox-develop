{
  "HOME": {
    "FEATURES": {
      "SLIDES": {
        "SLIDE_1": {
          "TITLE": "Plug and Play",
          "CONTENT": "Ready to use solution, which can be easily installed"
        },
        "SLIDE_2": {
          "TITLE": "Detailed Documentation",
          "CONTENT": "Well described documentation on a developer portal"
        },
        "SLIDE_3": {
          "TITLE": "Reliable test options",
          "CONTENT": "TPP-Test certificate generation tool and NISP Tests"
        },
        "SLIDE_4": {
          "TITLE": "Customizable User Interface",
          "CONTENT": "TPP-UI for users and account management on the bank side"
        },
        "SLIDE_5": {
          "TITLE": "Customer focused",
          "CONTENT": "Client-oriented approach, flexible solution for customer needs and customer support"
        },
        "SLIDE_6": {
          "TITLE": "Realistic Simulation",
          "CONTENT": "Real bank system emulations with embedded XS2A API"
        },
        "SLIDE_7": {
          "TITLE": "Wide range of services",
          "CONTENT": "Accounting Service, Security Service and Payment Service"
        },
        "SLIDE_8": {
          "TITLE": "Open source",
          "CONTENT": "Open source project, available on GitHub and constantly updated"
        }
      }
    },
    "HISTORY": {
      "TITLE": "Product History",
      "PRODUCT": {
        "POINT_1": {
          "TITLE": "Project Kick-Off with two Team Members",
          "CONTENT": ""
        },
        "POINT_2": {
          "TITLE": "PreDemo of MVP 1.0",
          "CONTENT": "Embedded approach: PIS, AIS, PIIS"
        },
        "POINT_3": {
          "TITLE": "DEMO of MVP 1.0",
          "CONTENT": "Embedded and redirected approaches"
        },
        "POINT_4": {
          "TITLE": "Release of ModelBank ver 1.0",
          "CONTENT": "Support of Redirect and Embedded approach: TPP-UI, Online Banking"
        },
        "POINT_5": {
          "TITLE": "Release ver 1.1",
          "CONTENT": "Multilevel SCA, Multicurrency accounts"
        },
        "POINT_6": {
          "TITLE": "Release ver 1.8",
          "CONTENT": "Extended TPP UI functionality"
        },
        "POINT_7": {
          "TITLE": "Release ver 3.0",
          "CONTENT": "Moved to Java 11"
        },
        "POINT_8": {
          "TITLE": "Release ver 5.0",
          "CONTENT": "Moved to new Ledgers with Keycloak IDP"
        },
        "POINT_9": {
          "TITLE": "Release ver 5.7",
          "CONTENT": "Moved all frontend application to Angular 11"
        },
        "POINT_10": {
          "TITLE": "Release ver 6.0/7.0",
          "CONTENT": "Separated administrator functionality to another module"
        },
        "POINT_11": {
          "TITLE": "Release ver 6.4/7.4",
          "CONTENT": "Improved Developer portal functionality"
        },
        "POINT_12": {
          "TITLE": "Release ver 6.7/7.7",
          "CONTENT": "Moved frontend applications to Angular version 15, updated backend libraries versions"
        }
      }
    },
    "QUESTIONS": {
      "TITLE": "Any Questions?",
      "ASK": "Ask this person."
    }
  },
  "TEST_CASES": {
    "TEST_CASES": "Test Cases",
    "INTRODUCTION": {
      "EXP_TEST_CASES": "Explanation of the test cases",
      "REDIRECT": "Overview of the redirect approach ",
      "EMBEDDED": "Overview of the embedded approach",
      "TESTING": "Testing flows",
      "TEST_VALUES": "Testing values",
      "POSTMAN_TESTING": "Postman testing"
    },
    "SIDE_NAV": {
      "PAYMENT": {
        "PAYMENT_INITATION": "Payment initiation",
        "REDIRECT": {
          "REDIRECT_SCA": "Redirect SCA",
          "INITIATE_PAYMENT": "Initiate Payment",
          "GET_PAYMENT_STATUS": "Get Payment Status",
          "GET_PAYMENT_INFORMATION": "Get Payment Information",
          "DELETE_PAYMENT_DATA": "Delete Payment Data"
        },
        "EMBEDDED": {
          "EMBEDDED_SCA": "Embedded SCA",
          "INITIATE_PAYMENT": "Initiate Payment",
          "START_AUTHORISATION_PROCESS": "Start Authorisation Process",
          "UPDATE_PSU_DATA_WITH_PASSWORD": "Update PSU with password ",
          "UPDATE_PSU_WITH_TAN": "Update PSU with TAN",
          "GET_PAYMENT_STATUS": "Get Payment Status",
          "GET_PAYMENT_INFORMATION": "Get Payment Information"
        },
        "CANCELLATION": {
          "PAYMENT_CANCELLATION_IN_EMBEDDED_SCA": "Payment cancellation in Embedded SCA",
          "INITIATE_PAYMENT_CANCELLATION": "Initiate Payment cancellation",
          "START_CANCELLATION_AUTHORISATION": "Start cancellation authorisation",
          "UPDATE_PSU_DATA_WITH_PASSWORD": "Update PSU with password ",
          "UPDATE_PSU_WITH_TAN": "Update PSU with TAN",
          "PAYMENT_CANCELLATION_STATUS": "Get Payment status"
        }
      },
      "CONSENT": {
        "CONSENT_INITIATION": "Consent initiation",
        "REDIRECT": {
          "REDIRECT_SCA": "Redirect SCA",
          "CREATE_CONSENT": "Create consent"
        },
        "EMBEDDED": {
          "EMBEDDED_SCA": "Embedded SCA",
          "CREATE_CONSENT": "Create consent",
          "START_AUTHORISATION_PROCESS": "Start Authorisation Process",
          "UPDATE_PSU_DATA_WITH_PASSWORD": "Update PSU with password ",
          "UPDATE_PSU_WITH_TAN": "Update PSU with TAN",
          "READ_CONSENT_INFORMATION": "Read consent information"
        }
      },
      "ACCOUNT": {
        "ACCOUNT_INFORMATION": "Account information",
        "READ_ACCOUNT_LIST": "Read Account List",
        "READ_ACCOUNT_DETAILS": "Read Account Details",
        "READ_BALANCE": "Read Balance",
        "READ_LIST_OF_TRANSACTION": "Read List of Transaction",
        "READ_TRANSACTION_DETAILS": "Read Transaction Details"
      },
      "FUNDS": {
        "FUNDS_CONFIRMATION": "Funds confirmation",
        "CONFIRMATION_OF_FUNDS_REQUEST": "Confirmation of funds request"
      }
    },
    "COMPONENTS": {
      "TABS": {
        "DOC": "Documentation",
        "PLAY": "Play with data"
      },
      "TH": {
        "TH_1": "Header",
        "TH_2": "Value"
      },
      "CODE_AREA": {
        "SHOW": "Show Body",
        "HIDE": "Hide Body"
      },
      "RDCT_PAY_INIT_POST": {
        "TITLE_1": "STEP 1: Create payment",
        "PART_1": "1. Open swagger tab \"Payment Initiation Service (PIS)\", open",
        "PART_2": "2. Press ",
        "ITALIC_SPAN": "Try it out",
        "PART_3": ". Choose:",
        "PART_4": "and",
        "PART_5": ". Default values would be",
        "PART_6": "in",
        "PART_7": "and",
        "PART_8": "in ",
        "PART_9": "3. After choosing payment service and payment product, fill the header\n fields with the following values:",
        "PART_10": "Put in ",
        "PART_11": "the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_12": "If you chose to create single payment by setting",
        "PART_13": " to",
        "PART_14": ", insert into\n request body the following json:",
        "PART_15": "If you chose to create periodic payment by setting",
        "PART_16": " to",
        "PART_17": ", insert\n into request body the following json:",
        "PART_18": "If you chose to create bulk payment by setting",
        "PART_19": " to",
        "PART_20": ", insert into\n request body the following json:",
        "PART_21": "Change placeholder ",
        "PART_22": " in\n section",
        "PART_23": "of the json you chose to the IBAN of the user (IBAN should match user\n login you entered in PSU-ID header above).",
        "PART_24": "4. Execute and get response with code 201 and related information.",
        "TITLE_2": "STEP 2: Authorise payment",
        "PART_25": "Start with the authorisation process. Follow",
        "PART_26": " link to the\n online banking page.",
        "PART_27": "(\"frequency\" can be changed from \"Monthly\" to\n \"Daily\", \"Weekly\", \"EveryTwoWeeks\", \"EveryTwoMonths\", \"Quarterly\", \"SemiAnnual\" or \"Annual\")",
        "PART_28": "If you want to create payment without a debtor account (for further account selection during the payment authorisation process), ",
        "PART_29": "first set the ASPSP profile \"debtorAccountOptionalInInitialRequest\" value to \"true\", then remove from request body debtor account block: ",
        "PART_30": "5. Execute and get response with code 201 and related information.",
        "DEBTOR_ACC": "\"debtorAccount\": {\n        \"currency\": \"EUR\",\n        \"iban\": \"DE80760700240271232400\"\n    },",
        "NOTE": "NOTE:"
      },
      "RDCT_PAY_DELETE": {
        "TITLE_1": "STEP 2: Cancel payment",
        "PART_1": "Start with the authorisation process. Follow",
        "PART_2": "link to the online banking page.",
        "PART_2_A": "To start payment cancellation process you have to create this payment first",
        "PART_3": "1. Initiate cancellation process with",
        "PART_4": "Choose the same",
        "PART_5": "and",
        "PART_6": "you chose in ",
        "STEP": "in the previous step “Create payment”",
        "PART_7": "2. Enter payment id you have got from the previous response in",
        "PART_8": "in the field",
        "PART_9": "3. After choosing payment service and payment product, fill the header\n fields with the following values:",
        "PART_10": "4. Hit ",
        "ITALIC_SPAN": "\"Execute\"",
        "PART_11": "button and get 200\n HTTP code and related information.",
        "TITLE_2": "STEP 3: Authorise Cancellation",
        "PART_12": "1. Start with the authorisation process for cancellation. Follow",
        "PART_13": "link to the online banking page."
      },
      "RDCT_CONS": {
        "TITLE_1": "STEP 1: Create consent",
        "PART_1": "1. Open swagger tab \"Account Information Service (AIS)\", open",
        "PART_2": "2. Press ",
        "ITALIC_SPAN": "\"Try it out\"",
        "PART_3": ", fill the header\n fields with the following values:",
        "PART_4": "Put in ",
        "PART_5": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_6": "3. Insert into request body the following json for available accounts\n consent:",
        "STEP": "STEP 1",
        "PART_7": "Change placeholder ",
        "PART_8": " to the\n IBAN of the user (IBAN should match user login you entered in PSU-ID\n header above).",
        "PART_9": "4. Execute and get response with code 201 and related information.",
        "TITLE_2": "STEP 2: Authorise consent",
        "PART_10": "1. Start with the authorisation process for consent: follow the link",
        "PART_11": "to the online\n banking page."
      },
      "EMB_IN_CR_POST": {
        "PART_25": "5. Start with the authorisation process.",
        "PART_26": "Pay attention to the amount of SCA methods user has: if user has no SCA\n methods, test payment initiation with the flow described below in",
        "ITALIC_1": "\"Payment authorisation for user with no SCA methods\"",
        "PART_27": ". For user with single SCA method check",
        "ITALIC_2": "\"Payment authorisation for user with single SCA method\"",
        "PART_28": ", and for user with multiple SCA methods check",
        "ITALIC_3": "\"Payment authorisation for user with multiple SCA methods\""
      },
      "EMB_IN_AUTH_POST": {
        "TITLE": "STEP 2: Authorise payment",
        "SUBTITLE": "2.1 Start Payment Authorisation Process ",
        "PART_1": "1. Start authorisation process with",
        "PART_2": ". Choose the same",
        "PART_3": "and",
        "PART_4": "you chose in ",
        "STEP": "STEP 1",
        "PART_5": "2. Enter payment id you have got from the previous response in",
        "PART_6": "in the field",
        "PART_7": "3. After choosing payment service and payment product, fill the header\n fields with the following values:",
        "PART_8": "Put in ",
        "PART_9": "the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_10": "4. Start authorisation by hitting",
        "ITALIC_SPAN": "\"Execute\"",
        "PART_11": "button and get 201 HTTP code\n and related information."
      },
      "EMB_IN_PUT": {
        "TITLE": "STEP 2: Authorise payment",
        "SUBTITLE": "2.2 Update PSU with password ",
        "SUBTITLE_TAN": "2.3 Update PSU with TAN ",
        "SUBTITLE_1": "Payment authorisation for user with no SCA methods",
        "PART_1": "1. Continue payment authorisation with call to",
        "PART_2": "2. Enter payment id in the field in the field",
        "PART_3": "and authorisation id you received from POST endpoint (start\n authorisation) in",
        "PART_4": "field.",
        "PART_5": "3. Fill the header fields with the following values:",
        "PART_6": "Put in ",
        "PART_7": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_8": "4. Insert into request body the following json:",
        "PART_9": "Put in ",
        "PART_10": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_11": "5. Execute endpoint and get",
        "PART_12": "and",
        "PART_13": "in response.",
        "SUBTITLE_2": "Payment authorisation for user with single SCA method",
        "PART_14": "1. Continue payment authorisation with call to",
        "PART_15": "2. Enter payment id in the field in the field",
        "PART_16": "and authorisation id you received from POST endpoint (start\n authorisation) in",
        "PART_17": "field.",
        "PART_18": "3. Fill the header fields with the following values:",
        "PART_19": "Put in ",
        "PART_20": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_21": "4. Insert into request body the following json:",
        "PART_22": "Put in ",
        "PART_23": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_24": "5. Execute endpoint and get",
        "PART_25": "and",
        "PART_26": "in response.",
        "PART_27": "6. Execute this PUT endpoint again, but this time update request body:\n fill it with the following json:",
        "PART_28": "User has only one SCA method, so generated TAN",
        "PART_29": "was sent to the user mail (mobile authorisation is not possible for now), and now you need to enter this data and execute\n PUT command. The response should be",
        "PART_30": "and",
        "SUBTITLE_3": "Payment authorisation for user with multiple SCA methods",
        "PART_31": "1. Continue payment authorisation with call to",
        "PART_32": "2. Enter payment id in the field in the field",
        "PART_33": "and authorisation id you received from POST endpoint (start\n authorisation) in",
        "PART_34": "field.",
        "PART_35": "3. Fill the header fields with the following values:",
        "PART_36": "Put in ",
        "PART_37": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_38": "4. Insert into request body the following json:",
        "PART_39": "Put in ",
        "PART_40": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_41": "5. Execute endpoint and get",
        "PART_42": " and list of\n authorisation methods in response.",
        "PART_43": "6. Execute this PUT endpoint again, but this time update request body:\n fill it with the following json:",
        "PART_44": "Put in placeholder",
        "PART_45": "any\n value of authenticationMethodId of your choice. The response should be",
        "PART_46": " and",
        "PART_47": "7. Execute this PUT endpoint again, update request body: fill it with\n the following json:",
        "PART_48": "SCA method was chosen, so generated TAN",
        "PART_49": " was sent to the\n user mail (mobile authorisation is not possible for now), and now you need to enter this data and execute PUT command.",
        "PART_50": "The response should be",
        "PART_51": " and",
        "PART_52": " the TAN of\n the user you get."
      },
      "EMB_IN_GET": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get payment information and GET endpoint",
        "PART_3": "to check current status of the payment.",
        "PART_4": "2. Try GET endpoint",
        "PART_5": "to get authorisation information and GET endpoint",
        "PART_6": "to check current status of the authorisation.",
        "SUBTITLE": "Main steps:",
        "PART_7": "1. Choose",
        "PART_8": "and",
        "PART_9": ". Use the same values you used in the steps before.",
        "PART_10": "2. After choosing payment service and payment product, fill the header\n fields with the following values:",
        "PART_11": "Put in ",
        "PART_12": "the name of the\n user you chose (you can view users and their information in TPP-UI)."
      },
      "EMB_CANCEL_POST": {
        "PART_25": "6. Start with the authorisation process. If the payment is not\n authorised yet - authorise payment with the flows above (depending on\n the amount of SCA methods chosen user has).",
        "PART_26": "7. If the payment is already authorised - proceed with payment\n cancellation.",
        "PART_27": "Pay attention to the ASPSP-Profile option",
        "PART_28": "If this option is set to",
        "PART_29": ", then check",
        "BOLD_1": "Payment cancellation without authorisation",
        "PART_30": "flow.",
        "PART_31": "If the option is set to",
        "PART_32": ", pay attention to the amount of SCA methods user has: if user has no\n SCA methods, test payment initiation with the flow described below in",
        "BOLD_2": "Payment cancellation authorisation for user with no SCA methods.",
        "PART_33": "For user with single SCA method check",
        "BOLD_3": "Payment cancellation authorisation for user with single SCA method,",
        "PART_34": " and for user with multiple SCA methods check",
        "BOLD_4": "Payment cancellation authorisation for user with multiple SCA methods"
      },
      "EMB_CANS_DELETE": {
        "TITLE": "STEP 1: Payment cancellation authorisation"
      },
      "EMB_CANS_POST": {
        "TITLE": "STEP 2: Payment cancellation authorisation",
        "SUBTITLE": "2.1. Start Payment cancellation authorisation",
        "PART_1": "1. Start payment cancellation authorisation with",
        "PART_2": ". Choose the same",
        "PART_3": "and",
        "PART_4": "you chose in ",
        "STEP": "STEP 1",
        "PART_5": "2. Enter payment id you have got from the previous response in",
        "PART_6": "in the field",
        "PART_7": "3. Fill the header fields with the following values:",
        "PART_8": "Put in ",
        "PART_9": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_10": "4. Execute the command and get 201 response and related information."
      },
      "EMB_CANS_PUT": {
        "TITLE": "STEP 2: Payment cancellation authorisation",
        "SUBTITLE": "2.2 Update PSU with password",
        "SUBTITLE_TAN": "2.3 Update PSU with TAN",
        "SUBTITLE_1": "Payment cancellation authorisation for user with no SCA methods",
        "PART_1": "1. Continue payment cancellation authorisation with call to",
        "PART_2": ". Choose the same",
        "PART_3": "and",
        "PART_4": "you chose in ",
        "STEP": "STEP 1",
        "PART_5": ". Fill headers with\n the same values as in previous POST command.",
        "PART_6": "2. Enter payment id you have got from",
        "PART_7": " in the field",
        "PART_8": ". Enter cancellation id you have got from the previous POST endpoint in\n the field",
        "PART_9": "3. Insert into request body the following json:",
        "PART_10": "Put in ",
        "PART_11": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_12": "4. Execute endpoint and get",
        "SUBTITLE_2": "Payment cancellation authorisation for user with single SCA method",
        "PART_13": "1. Continue payment cancellation authorisation with call to",
        "PART_14": ". Choose the same",
        "PART_15": "and",
        "PART_16": "you chose in ",
        "PART_17": ". Fill headers with\n the same values as in previous POST command.",
        "PART_18": "2. Enter payment id you have got from",
        "PART_19": " in the field",
        "PART_20": ". Enter cancellation id you have got from the previous POST endpoint in\n the field",
        "PART_21": "3. Insert into request body the following json:",
        "PART_22": "Put in ",
        "PART_23": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_24": "4. Execute endpoint and get",
        "PART_25": "5. Execute this PUT endpoint again, but this time update request body:\n fill it with the following json:",
        "PART_26": "User has only one SCA method, so generated TAN",
        "PART_27": "was sent to the user mail (mobile authorisation is not possible for now), and now you need to enter this data and execute\n PUT command. The response should be",
        "SUBTITLE_3": "Payment cancellation authorisation for user with multiple SCA methods",
        "PART_28": "1. Continue payment cancellation authorisation with call to",
        "PART_29": ". Choose the same",
        "PART_30": "and",
        "PART_31": "you chose in ",
        "PART_32": ". Fill headers with\n the same values as in previous POST command.",
        "PART_33": "2. Enter payment id you have got from",
        "PART_34": " in the field",
        "PART_35": ". Enter cancellation id you have got from the previous POST endpoint in\n the field",
        "PART_36": "3. Insert into request body the following json:",
        "PART_37": "Put in ",
        "PART_38": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_39": "4. Execute endpoint and get",
        "PART_40": "and list of authorisation methods in response.",
        "PART_41": "5. Execute this PUT endpoint again, but this time update request body:\n fill it with the following json:",
        "PART_42": "Put in placeholder",
        "PART_43": " any value\n of authenticationMethodId of your choice. The response should be",
        "PART_44": "6. Execute this PUT endpoint again, update request body: fill it with\n the following json:",
        "PART_45": "User has only one SCA method, so generated TAN",
        "PART_46": "was sent to the user mail (mobile authorisation is not possible for now), and now you need to enter this data and execute\n PUT command. The response should be"
      },
      "EMB_CANS_GET": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to check current status of the cancellation authorisation.",
        "PART_3": "2. Try GET endpoint",
        "PART_4": "to get current payment status (it should be `CANC`, cancelled)."
      },
      "EMB_CONS_AUTH": {
        "TITLE": "STEP 2: Consent authorisation",
        "SUBTITLE": "2.1 Start Consent Authorisation Process",
        "PART_1": "1. Start authorisation process with",
        "PART_2": "2. Enter consent id you have got from the previous response in",
        "STEP": "STEP 1",
        "PART_3": " in the field",
        "PART_4": "3. After providing consent id, fill the header fields with the following\n values:",
        "PART_5": "Put in ",
        "PART_6": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_7": "4. Start authorisation by hitting",
        "ITALIC": "\"Execute\"",
        "PART_8": " button and get 201 HTTP code\n and related information."
      },
      "EMB_CONS_PUT": {
        "TITLE": "STEP 2: Consent authorisation",
        "SUBTITLE": "2.2 Update PSU with password",
        "SUBTITLE_TAN": "2.3 Update PSU with TAN",
        "SUBTITLE_1": "Consent authorisation for user with no SCA methods",
        "PART_1": "1. Start authorisation by hitting",
        "ITALIC": "\"Execute\"",
        "PART_2": "button and get 201 HTTP code\n and related information.",
        "PART_3": "2. Continue payment authorisation with call to",
        "PART_4": "3. Enter consent id in the field",
        "PART_5": "and authorisation id you received from POST endpoint (start\n authorisation) in",
        "PART_6": "field.",
        "PART_7": "4. Fill the header fields with the following values:",
        "PART_8": "5. Insert into request body the following json:",
        "PART_9": "Put in ",
        "PART_10": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_11": "6. Execute endpoint and get",
        "PART_12": "and",
        "PART_13": "in response.",
        "SUBTITLE_2": "Consent authorisation for user with single SCA method",
        "PART_14": "1. Continue payment authorisation with call to",
        "PART_15": "2. Enter consent id in the field",
        "PART_16": "and authorisation id you received from POST endpoint (start\n authorisation) in",
        "PART_17": "field.",
        "PART_18": "3. Fill the header fields with the following values:",
        "PART_19": "Put in ",
        "PART_20": " the name of the\n user you chose (you can view users and their information in TPP-UI).",
        "PART_21": "4. Insert into request body the following json:",
        "PART_22": "Put in ",
        "PART_23": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_24": "5. Execute endpoint and get",
        "PART_25": "and",
        "PART_26": "in response.",
        "PART_27": "6. Execute this PUT endpoint again, but this time update request body:\n fill it with the following json:",
        "PART_28": "User has only one SCA method, so generated TAN",
        "PART_29": "was sent to the user mail (mobile authorisation is not possible for now), and now you need to enter this data and execute\n PUT command.",
        "PART_30": "The response should be",
        "PART_31": "and",
        "SUBTITLE_3": "Consent authorisation for user with multiple SCA methods",
        "PART_32": "1. Continue payment authorisation with call to",
        "PART_33": "2. Enter consent id in the field",
        "PART_34": "and authorisation id you received from POST endpoint (start\n authorisation) in",
        "PART_35": "field.",
        "PART_36": "3. Fill the header fields with the following values:",
        "PART_37": "4. Insert into request body the following json:",
        "PART_38": "Put in ",
        "PART_39": " the password of\n the user you chose (you can view users and their information in TPP-UI).",
        "PART_40": "5. Execute endpoint and get",
        "PART_41": "and list of authorisation methods in response.",
        "PART_42": "6. Execute this PUT endpoint again, but this time update request body:\n fill it with the following json:",
        "PART_43": "Put in placeholder",
        "PART_44": " any value\n of authenticationMethodId of your choice. The response should be",
        "PART_45": "and",
        "PART_46": "7. Execute this PUT endpoint again, update request body: fill it with\n the following json:",
        "PART_47": "SCA method was chosen, so generated TAN",
        "PART_48": "was sent to the user mail (mobile authorisation is not possible for now), and now you need to enter this data and execute\n PUT command.",
        "PART_49": "The response should be",
        "PART_50": "and",
        "PART_51": " the TAN from\n the user you get."
      },
      "EMB_CONS_GET": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get consent information and GET endpoint",
        "PART_3": "to check current status of the consent.",
        "PART_4": "2. Try GET endpoint",
        "PART_5": "to get authorisation information and GET endpoint",
        "PART_6": "to check current status of the authorisation."
      },
      "AC_INF_ACS": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get account with chosen consent ID",
        "PART_3": "Put in ",
        "PART_4": " the consent ID of accounts\n that you want to get (you can view users and their information in TPP-UI)."
      },
      "AC_INF_AC": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get account with chosen account-id",
        "PART_3": "Put in ",
        "PART_4": " the consent ID of account\n that you want to get (you can view users and their information in TPP-UI)."
      },
      "AC_INF_BAL": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get account's list of balances",
        "PART_3": "Put in ",
        "PART_4": " the consent ID of account\n that you want to get (you can view users and their information in TPP-UI)."
      },
      "AC_INF_TRS": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get account's list of transactions with chosen booking status.",
        "PART_3": "Put in ",
        "PART_4": " the consent ID of account\n that you want to get (you can view users and their information in TPP-UI)."
      },
      "AC_INF_TR": {
        "PART_1": "1. Try GET endpoint",
        "PART_2": "to get account's transaction with current id.",
        "PART_3": "Put in ",
        "PART_4": " the consent ID of account\n that you want to get (you can view users and their information in TPP-UI)."
      },
      "FUNDS_CONFIRMATION": {
        "TH": "Funds confirmation:",
        "TH2": "Confirmation of funds request",
        "PART_1": "1. Try POST endpoint",
        "PART_2": " to check whether funds are available for chosen user. Fill the header fields with the following values: ",
        "PART_3": "2. Insert into request body the following json:",
        "PART_4": "3. Change placeholder ",
        "PART_5": " to the IBAN of the chosen user. Set user currency in the field \"currency\"."
      }
    }
  },
  "CONTACT": {
    "TITLE_1": "Any Questions?",
    "SUBTITLE": "Ask this person.",
    "TITLE_2": "Contact"
  },
  "GETTING_STARTED": {
    "TABLE_OF_CONTENTS": "Table of contents"
  }
}
