{"ast":null,"code":"import { UserService } from '../../services/user.service';\nimport { merge, Subject, Subscription } from 'rxjs';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../../services/account.service';\nimport { InfoService } from '../../commons/info/info.service';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { ADMIN_KEY } from '../../commons/constant/constant';\nimport { TppManagementService } from '../../services/tpp-management.service';\nimport { Location } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"../../services/account.service\";\nimport * as i3 from \"../../services/tpp-management.service\";\nimport * as i4 from \"../../commons/info/info.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = [\"instance\"];\nfunction AccountAccessManagementComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction AccountAccessManagementComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \"Login name is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountAccessManagementComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \"SCA weight is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountAccessManagementComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" The SCA weight must be between 0 and 100 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountAccessManagementComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const accessType_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", accessType_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", accessType_r7, \" \");\n  }\n}\nfunction AccountAccessManagementComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AccountAccessManagementComponent = /*#__PURE__*/(() => {\n  class AccountAccessManagementComponent {\n    constructor(userService, accountService, tppManagementService, infoService, formBuilder, router, route, location) {\n      this.userService = userService;\n      this.accountService = accountService;\n      this.tppManagementService = tppManagementService;\n      this.infoService = infoService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.location = location;\n      this.subscription = new Subscription();\n      this.submitted = false;\n      this.errorMessage = null;\n      this.accessTypes = ['OWNER', 'READ', 'DISPOSE'];\n      this.focus$ = new Subject();\n      this.click$ = new Subject();\n      this.search = text$ => {\n        const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\n        const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\n        const inputFocus$ = this.focus$;\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(map(searchText => searchText === '' ? this.users : this.users.filter(user => user.login.toLowerCase().indexOf(searchText.toLowerCase()) > -1)));\n      };\n      this.inputFormatterValue = user => {\n        if (user) {\n          return user.login;\n        }\n        return user;\n      };\n      this.resultFormatterValue = user => {\n        if (user) {\n          this.accountAccessForm.get('id').setValue(user.id);\n          return user.login;\n        }\n        return user;\n      };\n      this.route.params.subscribe(params => {\n        this.accountService.getAccount(params.id).subscribe(account => {\n          this.account = account;\n        });\n      });\n    }\n    ngOnInit() {\n      this.admin = sessionStorage.getItem(ADMIN_KEY);\n      this.listUsers();\n      this.setupAccountAccessFormControl();\n      this.route.queryParams.subscribe(params => {\n        this.tppId = params['tppId'];\n      });\n    }\n    setupAccountAccessFormControl() {\n      this.accountAccessForm = this.formBuilder.group({\n        iban: [''],\n        currency: [''],\n        id: ['', Validators.required],\n        scaWeight: [0, [Validators.required, Validators.min(0), Validators.max(100)]],\n        accessType: ['READ', [Validators.required]],\n        accountId: ['']\n      });\n    }\n    listUsers() {\n      const MAX_VALUE = 2147483647;\n      if (this.admin === 'true') {\n        this.tppManagementService.getAllUsers(0, 500).subscribe(resp => {\n          this.users = resp.users;\n        });\n      } else {\n        this.userService.listUsers(0, MAX_VALUE).subscribe(resp => {\n          this.users = resp.users;\n        });\n      }\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.accountAccessForm.invalid) {\n        return;\n      }\n      this.accountAccessForm.get('iban').setValue(this.account.iban);\n      this.accountAccessForm.get('currency').setValue(this.account.currency);\n      this.accountAccessForm.get('accountId').setValue(this.account.id);\n      if (this.admin === 'true') {\n        this.tppManagementService.getTppById(this.tppId).subscribe(() => {\n          this.infoService.openFeedback('Access to account ' + this.account.iban + ' successfully granted', {\n            duration: 3000\n          });\n          setTimeout(() => {\n            this.location.back();\n          }, 3000);\n        });\n      } else if (this.admin === 'false') {\n        this.accountService.updateAccountAccessForUser(this.accountAccessForm.getRawValue()).subscribe(() => {\n          this.infoService.openFeedback('Access to account ' + this.account.iban + ' successfully granted', {\n            duration: 3000\n          });\n          setTimeout(() => {\n            this.location.back();\n          }, 3000);\n        });\n      }\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    cancel() {\n      this.location.back();\n    }\n    static #_ = this.ɵfac = function AccountAccessManagementComponent_Factory(t) {\n      return new (t || AccountAccessManagementComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.TppManagementService), i0.ɵɵdirectiveInject(i4.InfoService), i0.ɵɵdirectiveInject(i5.UntypedFormBuilder), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i7.Location));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountAccessManagementComponent,\n      selectors: [[\"app-account-access-management\"]],\n      viewQuery: function AccountAccessManagementComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.instance = _t.first);\n        }\n      },\n      decls: 30,\n      vars: 19,\n      consts: [[1, \"container-fluid\"], [1, \"header__title\"], [1, \"card\", \"card--small\"], [1, \"card-body--large\"], [3, \"formGroup\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\", \"required\"], [\"for\", \"id\"], [\"id\", \"id\", 1, \"form-control\", \"arrow\", 3, \"ngClass\", \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"focus\", \"click\"], [\"instance\", \"ngbTypeahead\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"scaWeight\"], [\"formControlName\", \"scaWeight\", \"id\", \"scaWeight\", \"placeholder\", \"0\", \"type\", \"number\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"accessType\"], [\"formControlName\", \"accessType\", \"id\", \"accessType\", 1, \"form-control\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [3, \"value\"]],\n      template: function AccountAccessManagementComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \"Account access management\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4);\n          i0.ɵɵtemplate(6, AccountAccessManagementComponent_div_6_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n          i0.ɵɵtext(9, \"User login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 8, 9);\n          i0.ɵɵlistener(\"focus\", function AccountAccessManagementComponent_Template_input_focus_10_listener($event) {\n            return ctx.focus$.next($event.target.value);\n          })(\"click\", function AccountAccessManagementComponent_Template_input_click_10_listener($event) {\n            return ctx.click$.next($event.target.value);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, AccountAccessManagementComponent_div_12_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 11)(14, \"label\", 12);\n          i0.ɵɵtext(15, \"SCA Weight\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 13);\n          i0.ɵɵtemplate(17, AccountAccessManagementComponent_div_17_Template, 2, 0, \"div\", 10);\n          i0.ɵɵtemplate(18, AccountAccessManagementComponent_div_18_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 11)(20, \"label\", 14);\n          i0.ɵɵtext(21, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"select\", 15);\n          i0.ɵɵtemplate(23, AccountAccessManagementComponent_option_23_Template, 2, 2, \"option\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, AccountAccessManagementComponent_div_24_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 17)(26, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function AccountAccessManagementComponent_Template_button_click_26_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵtext(27, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 19);\n          i0.ɵɵlistener(\"click\", function AccountAccessManagementComponent_Template_button_click_28_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(29, \"Grant access\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_12_0;\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.accountAccessForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c1, ((tmp_2_0 = ctx.accountAccessForm.get(\"id\")) == null ? null : tmp_2_0.errors) && (ctx.accountAccessForm.get(\"id\").dirty || ctx.accountAccessForm.get(\"id\").touched || ctx.submitted)))(\"ngbTypeahead\", ctx.search)(\"inputFormatter\", ctx.resultFormatterValue)(\"resultFormatter\", ctx.resultFormatterValue);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.accountAccessForm.get(\"id\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors.required);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c1, ((tmp_7_0 = ctx.accountAccessForm.get(\"scaWeight\")) == null ? null : tmp_7_0.errors) && ((tmp_7_0 = ctx.accountAccessForm.get(\"scaWeight\")) == null ? null : tmp_7_0.touched) || ctx.submitted && ((tmp_7_0 = ctx.accountAccessForm.get(\"scaWeight\")) == null ? null : tmp_7_0.errors)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = ctx.accountAccessForm.get(\"scaWeight\")) == null ? null : tmp_8_0.errors == null ? null : tmp_8_0.errors.required);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.accountAccessForm.get(\"scaWeight\")) == null ? null : tmp_9_0.errors == null ? null : tmp_9_0.errors.min) || ((tmp_9_0 = ctx.accountAccessForm.get(\"scaWeight\")) == null ? null : tmp_9_0.errors == null ? null : tmp_9_0.errors.max));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c1, ((tmp_10_0 = ctx.accountAccessForm.get(\"accessType\")) == null ? null : tmp_10_0.errors) && (ctx.accountAccessForm.get(\"accessType\").dirty || ctx.accountAccessForm.get(\"accessType\").touched || ctx.submitted)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accessTypes);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_12_0 = ctx.accountAccessForm.get(\"accessType\")) == null ? null : tmp_12_0.errors == null ? null : tmp_12_0.errors.required);\n        }\n      },\n      dependencies: [i7.NgClass, i7.NgForOf, i7.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i8.NgbTypeahead],\n      styles: [\"/*!\\n * Copyright 2018-2023 adorsys GmbH & Co KG\\n *\\n * This program is free software: you can redistribute it and/or modify it\\n * under the terms of the GNU Affero General Public License as published\\n * by the Free Software Foundation, either version 3 of the License, or (at\\n * your option) any later version. This program is distributed in the hope that\\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n * See the GNU Affero General Public License for more details.\\n *\\n * You should have received a copy of the GNU Affero General Public License\\n * along with this program. If not, see https://www.gnu.org/licenses/.\\n *\\n * This project is also available under a separate commercial license. You can\\n * contact us at psd2@adorsys.com.\\n */.dropdown-menu.show{max-height:300px;overflow:auto}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return AccountAccessManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}