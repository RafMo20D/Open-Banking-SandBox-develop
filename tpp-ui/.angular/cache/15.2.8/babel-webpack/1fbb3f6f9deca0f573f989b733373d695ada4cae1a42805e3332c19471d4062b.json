{"ast":null,"code":"/*\r\n * Copyright 2018-2023 adorsys GmbH & Co KG\r\n *\r\n * This program is free software: you can redistribute it and/or modify it\r\n * under the terms of the GNU Affero General Public License as published\r\n * by the Free Software Foundation, either version 3 of the License, or (at\r\n * your option) any later version. This program is distributed in the hope that\r\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n * See the GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see https://www.gnu.org/licenses/.\r\n *\r\n * This project is also available under a separate commercial license. You can\r\n * contact us at psd2@adorsys.com.\r\n */\nimport { EventEmitter } from '@angular/core';\nimport { NgbPaginationConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { PaginationConfigModel } from '../../models/pagination-config.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PaginationContainerComponent_div_0_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const number_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", number_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", number_r2, \" \");\n  }\n}\nconst _c0 = function () {\n  return [10, 20, 40, 60, 100];\n};\nfunction PaginationContainerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"ngb-pagination\", 2);\n    i0.ɵɵlistener(\"pageChange\", function PaginationContainerComponent_div_0_Template_ngb_pagination_pageChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.pageChange($event));\n    })(\"pageChange\", function PaginationContainerComponent_div_0_Template_ngb_pagination_pageChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.paginationConfig.currentPageNumber = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"select\", 3);\n    i0.ɵɵlistener(\"change\", function PaginationContainerComponent_div_0_Template_select_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.pageSizeChange($event.target.value));\n    })(\"ngModelChange\", function PaginationContainerComponent_div_0_Template_select_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.paginationConfig.itemsPerPage = $event);\n    });\n    i0.ɵɵtemplate(3, PaginationContainerComponent_div_0_option_3_Template, 2, 2, \"option\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"page\", ctx_r0.paginationConfig.currentPageNumber)(\"collectionSize\", ctx_r0.paginationConfig.totalItems)(\"pageSize\", ctx_r0.paginationConfig.itemsPerPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.paginationConfig.itemsPerPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(5, _c0));\n  }\n}\nexport let PaginationContainerComponent = /*#__PURE__*/(() => {\n  class PaginationContainerComponent {\n    constructor(config) {\n      this.config = config;\n      this.pageDataConfig = new EventEmitter();\n      // customize default values of paginations used by this component tree\n      config.size = 'sm';\n      config.boundaryLinks = true;\n      config.maxSize = 7;\n    }\n    pageChange(pageNumber) {\n      this.paginationConfig.currentPageNumber = pageNumber;\n      this.emitCurrentPageConfig();\n    }\n    pageSizeChange(pageSize) {\n      if (pageSize) {\n        this.paginationConfig.itemsPerPage = pageSize;\n      }\n      this.emitCurrentPageConfig();\n    }\n    emitCurrentPageConfig() {\n      const pageConfig = {\n        pageNumber: this.paginationConfig.currentPageNumber,\n        pageSize: this.paginationConfig.itemsPerPage\n      };\n      this.pageDataConfig.emit(pageConfig);\n    }\n    static #_ = this.ɵfac = function PaginationContainerComponent_Factory(t) {\n      return new (t || PaginationContainerComponent)(i0.ɵɵdirectiveInject(i1.NgbPaginationConfig));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaginationContainerComponent,\n      selectors: [[\"app-pagination-container\"]],\n      inputs: {\n        collectionSize: \"collectionSize\",\n        paginationConfig: \"paginationConfig\"\n      },\n      outputs: {\n        pageDataConfig: \"pageDataConfig\"\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"d-flex align-items-center justify-content-center p-2\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-center\", \"p-2\"], [3, \"page\", \"collectionSize\", \"pageSize\", \"pageChange\"], [1, \"form-select\", \"form-select-sm\", \"ms-4\", \"mb-3\", \"w-auto\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n      template: function PaginationContainerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, PaginationContainerComponent_div_0_Template, 4, 6, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.paginationConfig == null ? null : ctx.paginationConfig.totalItems);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i1.NgbPagination]\n    });\n  }\n  return PaginationContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}