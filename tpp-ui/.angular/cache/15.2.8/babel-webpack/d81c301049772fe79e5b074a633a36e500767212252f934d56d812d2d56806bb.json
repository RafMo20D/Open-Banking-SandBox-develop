{"ast":null,"code":"/*\r\n * Copyright 2018-2023 adorsys GmbH & Co KG\r\n *\r\n * This program is free software: you can redistribute it and/or modify it\r\n * under the terms of the GNU Affero General Public License as published\r\n * by the Free Software Foundation, either version 3 of the License, or (at\r\n * your option) any later version. This program is distributed in the hope that\r\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n * See the GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see https://www.gnu.org/licenses/.\r\n *\r\n * This project is also available under a separate commercial license. You can\r\n * contact us at psd2@adorsys.com.\r\n */\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TppUserService = /*#__PURE__*/(() => {\n  class TppUserService {\n    constructor(http) {\n      this.http = http;\n      this.tppUser = new BehaviorSubject(null);\n      this.currentTppUser = this.tppUser.asObservable();\n      this.url = `${environment.tppBackend}`;\n    }\n    getUserInfo() {\n      return this.http.get(`${this.url}/users/me`).pipe(tap(user => this.tppUser.next(user)));\n    }\n    resetPasswordViaEmail(login) {\n      return this.http.post(this.url + '/users/reset/password/' + login, null);\n    }\n    loadUserInfo() {\n      this.getUserInfo().subscribe();\n    }\n    updateUserInfo(user) {\n      return this.http.put(this.url + '/users', user);\n    }\n    static #_ = this.ɵfac = function TppUserService_Factory(t) {\n      return new (t || TppUserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TppUserService,\n      factory: TppUserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TppUserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}