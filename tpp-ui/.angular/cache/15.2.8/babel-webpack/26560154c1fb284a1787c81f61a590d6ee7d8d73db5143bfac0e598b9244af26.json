{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/*\r\n * Copyright 2018-2023 adorsys GmbH & Co KG\r\n *\r\n * This program is free software: you can redistribute it and/or modify it\r\n * under the terms of the GNU Affero General Public License as published\r\n * by the Free Software Foundation, either version 3 of the License, or (at\r\n * your option) any later version. This program is distributed in the hope that\r\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n * See the GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see https://www.gnu.org/licenses/.\r\n *\r\n * This project is also available under a separate commercial license. You can\r\n * contact us at psd2@adorsys.com.\r\n */\nimport { State, Action, Selector } from '@ngxs/store';\nimport { AddRecoveryPoint, DeleteRecoveryPoint, GetRecoveryPoint, RollbackRecoveryPoint } from '../components/actions/revertpoints.action';\nimport { ResetLedgersService } from '../services/reset-ledgers.service';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/reset-ledgers.service\";\nexport class RecoveryPointStateModel {}\nlet RecoveryPointState = class RecoveryPointState {\n  constructor(resetLedgersService) {\n    this.resetLedgersService = resetLedgersService;\n  }\n  static getRecoveryPointsList(state) {\n    return state.recoveryPoints;\n  }\n  getRecoveryPoint({\n    getState,\n    setState\n  }) {\n    return this.resetLedgersService.getAllRecoveryPoints().pipe(tap(result => {\n      const state = getState();\n      setState({\n        ...state,\n        recoveryPoints: Object(result)\n      });\n    }));\n  }\n  addRecoveryPoint({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    return this.resetLedgersService.createRecoveryPoints(payload).pipe(tap(result => {\n      const state = getState();\n      patchState({\n        recoveryPoints: [...state.recoveryPoints, result]\n      });\n    }));\n  }\n  deleteRecoveryPoint({\n    getState,\n    setState\n  }, {\n    id\n  }) {\n    return this.resetLedgersService.deleteRecoveryPoints(id).pipe(tap(() => {\n      const state = getState();\n      const filteredArray = state.recoveryPoints.filter(item => item.id !== id);\n      setState({\n        ...state,\n        recoveryPoints: filteredArray\n      });\n    }));\n  }\n  rollbackRecoveryPoint({\n    getState,\n    setState\n  }, {\n    id\n  }) {\n    return this.resetLedgersService.rollBackPointsById(id).pipe(tap(() => {\n      const state = getState();\n      const filteredArray = state.recoveryPoints.filter(item => item.id !== id.recoveryPointId);\n      setState({\n        ...state,\n        recoveryPoints: filteredArray\n      });\n    }));\n  }\n  static #_ = this.ɵfac = function RecoveryPointState_Factory(t) {\n    return new (t || RecoveryPointState)(i0.ɵɵinject(i1.ResetLedgersService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecoveryPointState,\n    factory: RecoveryPointState.ɵfac\n  });\n};\n__decorate([Action(GetRecoveryPoint), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], RecoveryPointState.prototype, \"getRecoveryPoint\", null);\n__decorate([Action(AddRecoveryPoint), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object, AddRecoveryPoint]), __metadata(\"design:returntype\", void 0)], RecoveryPointState.prototype, \"addRecoveryPoint\", null);\n__decorate([Action(DeleteRecoveryPoint), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object, DeleteRecoveryPoint]), __metadata(\"design:returntype\", void 0)], RecoveryPointState.prototype, \"deleteRecoveryPoint\", null);\n__decorate([Action(RollbackRecoveryPoint), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object, RollbackRecoveryPoint]), __metadata(\"design:returntype\", void 0)], RecoveryPointState.prototype, \"rollbackRecoveryPoint\", null);\n__decorate([Selector(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [RecoveryPointStateModel]), __metadata(\"design:returntype\", void 0)], RecoveryPointState, \"getRecoveryPointsList\", null);\nRecoveryPointState = __decorate([State({\n  name: 'recoveryPoints',\n  defaults: {\n    recoveryPoints: [],\n    selectedPoints: null\n  }\n}), __metadata(\"design:paramtypes\", [ResetLedgersService])], RecoveryPointState);\nexport { RecoveryPointState };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}