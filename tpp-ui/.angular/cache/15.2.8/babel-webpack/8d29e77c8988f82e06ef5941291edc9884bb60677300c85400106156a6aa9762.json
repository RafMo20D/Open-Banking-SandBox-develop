{"ast":null,"code":"/*\r\n * Copyright 2018-2023 adorsys GmbH & Co KG\r\n *\r\n * This program is free software: you can redistribute it and/or modify it\r\n * under the terms of the GNU Affero General Public License as published\r\n * by the Free Software Foundation, either version 3 of the License, or (at\r\n * your option) any later version. This program is distributed in the hope that\r\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n * See the GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see https://www.gnu.org/licenses/.\r\n *\r\n * This project is also available under a separate commercial license. You can\r\n * contact us at psd2@adorsys.com.\r\n */\nimport { HttpClient } from '@angular/common/http';\nimport { coerceBooleanProperty } from '../commons/utils/utils';\nimport { SettingsService } from './settings.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./settings.service\";\nexport let SettingsHttpService = /*#__PURE__*/(() => {\n  class SettingsHttpService {\n    constructor(http, settingsService) {\n      this.http = http;\n      this.settingsService = settingsService;\n    }\n    initializeApp() {\n      return new Promise(resolve => {\n        this.http.get('assets/settings.json').toPromise().then(response => {\n          this.settingsService.settings = response;\n          this.settingsService.settings.certGenEnabled = coerceBooleanProperty(response.certGenEnabled);\n          this.settingsService.settings.tppBackendBasePath = response.tppBackendBasePath;\n          resolve();\n        });\n      });\n    }\n    static #_ = this.ɵfac = function SettingsHttpService_Factory(t) {\n      return new (t || SettingsHttpService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SettingsService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SettingsHttpService,\n      factory: SettingsHttpService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SettingsHttpService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}