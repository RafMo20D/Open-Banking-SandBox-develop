{"ast":null,"code":"import { UserService } from '../../../services/user.service';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { User } from '../../../models/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { ScaMethods } from '../../../models/scaMethods';\nimport { TppUserService } from '../../../services/tpp.user.service';\nimport { TppManagementService } from '../../../services/tpp-management.service';\nimport { ADMIN_KEY } from '../../../commons/constant/constant';\nimport { InfoService } from '../../../commons/info/info.service';\nimport { HttpMethod } from '../../../models/http-method';\nimport { SettingsService } from '../../../services/settings.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../services/tpp.user.service\";\nimport * as i4 from \"../../../services/tpp-management.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../../commons/info/info.service\";\nimport * as i7 from \"../../../services/settings.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/button\";\nfunction UserUpdateComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formControl[\"login\"].value);\n  }\n}\nfunction UserUpdateComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Update user details\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Email is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Login is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_43_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function UserUpdateComponent_div_43_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const i_r8 = i0.ɵɵnextContext().index;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.removeScaDataItem(i_r8));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_43_select_8_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 49);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const httpMethod_r20 = ctx.$implicit;\n    const scaDataItem_r7 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"selected\", httpMethod_r20 == scaDataItem_r7.get(\"pushMethod\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", httpMethod_r20, \" \");\n  }\n}\nfunction UserUpdateComponent_div_43_select_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 48);\n    i0.ɵɵtemplate(1, UserUpdateComponent_div_43_select_8_option_1_Template, 2, 2, \"option\", 41);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.httpMethods);\n  }\n}\nfunction UserUpdateComponent_div_43_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" The value of the method is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_43_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" The method value has an incorrect format \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_43_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 49);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const method_r22 = ctx.$implicit;\n    const scaDataItem_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"selected\", method_r22 == scaDataItem_r7.get(\"scaMethod\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", method_r22, \" \");\n  }\n}\nfunction UserUpdateComponent_div_43_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" TAN is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserUpdateComponent_div_43_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" TAN must contain 6 digits \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"input-method\": a1\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction UserUpdateComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, UserUpdateComponent_div_43_button_1_Template, 1, 0, \"button\", 30);\n    i0.ɵɵelementStart(2, \"div\", 8)(3, \"div\", 31)(4, \"div\", 32)(5, \"label\", 33);\n    i0.ɵɵtext(6, \"Method Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34);\n    i0.ɵɵtemplate(8, UserUpdateComponent_div_43_select_8_Template, 2, 1, \"select\", 35);\n    i0.ɵɵelement(9, \"input\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, UserUpdateComponent_div_43_div_10_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(11, UserUpdateComponent_div_43_div_11_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 37)(13, \"label\", 38);\n    i0.ɵɵtext(14, \"SCA Method\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 39)(16, \"select\", 40);\n    i0.ɵɵtemplate(17, UserUpdateComponent_div_43_option_17_Template, 2, 2, \"option\", 41);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 31)(19, \"div\", 32)(20, \"label\", 33);\n    i0.ɵɵtext(21, \"Static TAN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 42);\n    i0.ɵɵtemplate(23, UserUpdateComponent_div_43_div_23_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(24, UserUpdateComponent_div_43_div_24_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 43)(26, \"div\", 39)(27, \"div\", 21)(28, \"div\", 44);\n    i0.ɵɵelement(29, \"input\", 45);\n    i0.ɵɵelementStart(30, \"label\", 46);\n    i0.ɵɵtext(31, \" Use Static TAN in ModelBank \");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const scaDataItem_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    let tmp_7_0;\n    let tmp_8_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.updateUserForm.controls[\"scaUserData\"].length);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"scaData\", i_r8, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", scaDataItem_r7.get(\"scaMethod\").value === \"PUSH_OTP\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"scaData\", i_r8, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(19, _c0, (scaDataItem_r7.controls[\"methodValue\"].touched || ctx_r6.submitted) && scaDataItem_r7.controls[\"methodValue\"].errors, scaDataItem_r7.get(\"scaMethod\").value === \"PUSH_OTP\"))(\"placeholder\", scaDataItem_r7.get(\"scaMethod\").value === \"PUSH_OTP\" ? \"Please set your PushOTP endpoint or leave blank for default\" : \"Please input SCA method for user\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = scaDataItem_r7.get(\"methodValue\")) == null ? null : tmp_7_0.errors == null ? null : tmp_7_0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_8_0 = scaDataItem_r7.get(\"methodValue\")) == null ? null : tmp_8_0.hasError(\"pattern\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.methods);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"scaData\", i_r8, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c1, (scaDataItem_r7.controls[\"staticTan\"].touched || ctx_r6.submitted) && scaDataItem_r7.controls[\"staticTan\"].errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (scaDataItem_r7.controls[\"staticTan\"].touched || ctx_r6.submitted) && scaDataItem_r7.controls[\"staticTan\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (scaDataItem_r7.controls[\"staticTan\"].touched || ctx_r6.submitted) && scaDataItem_r7.controls[\"staticTan\"].hasError(\"pattern\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"scaUserDataUsesStaticTan\", i_r8, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"scaUserDataUsesStaticTan\", i_r8, \"\");\n  }\n}\nexport let UserUpdateComponent = /*#__PURE__*/(() => {\n  class UserUpdateComponent {\n    constructor(userService, formBuilder, tppUserService, tppManagementService, router, activatedRoute, infoService, settingsService) {\n      this.userService = userService;\n      this.formBuilder = formBuilder;\n      this.tppUserService = tppUserService;\n      this.tppManagementService = tppManagementService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.infoService = infoService;\n      this.settingsService = settingsService;\n      this.url = `${this.settingsService.settings.tppBackendBasePath}` + '/tpp/push/tan';\n      this.user = new User();\n    }\n    ngOnInit() {\n      this.admin = sessionStorage.getItem(ADMIN_KEY);\n      this.setupUserFormControl();\n      this.activatedRoute.params.pipe(map(response => {\n        return response.id;\n      })).subscribe(id => {\n        this.userId = id;\n        this.getMethodsValues();\n        this.getUserDetails();\n      });\n      this.tppUserService.currentTppUser.subscribe(() => {\n        this.activatedRoute.params.subscribe(param => {\n          this.userId = param['id'];\n        });\n        this.getUserById();\n      });\n    }\n    getUserById() {\n      this.userService.getUser(this.userId).subscribe(user => this.user = user);\n    }\n    setupUserFormControl() {\n      this.updateUserForm = this.formBuilder.group({\n        scaUserData: this.formBuilder.array([]),\n        email: ['', [Validators.required, Validators.email]],\n        login: ['', Validators.required]\n      });\n    }\n    get formControl() {\n      return this.updateUserForm.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.updateUserForm.invalid) {\n        this.errorMessage = 'Please verify your credentials';\n        return;\n      }\n      const updatedUser = {\n        ...this.user,\n        email: this.updateUserForm.get('email').value,\n        login: this.updateUserForm.get('login').value,\n        scaUserData: this.updateUserForm.get('scaUserData').value\n      };\n      this.updateValue(updatedUser);\n      if (this.admin === 'true') {\n        this.tppManagementService.updateUserDetails(updatedUser, this.tppId).subscribe(() => this.router.navigate(['/users/' + `${this.userId}`]));\n      } else if (this.admin === 'false') {\n        this.userService.updateUserDetails(updatedUser).subscribe(() => this.router.navigate(['/users/' + `${this.userId}`]));\n      }\n    }\n    initScaData() {\n      const emailValidators = [Validators.required, Validators.pattern(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/))];\n      const scaData = this.formBuilder.group({\n        id: '',\n        scaMethod: [''],\n        methodValue: ['', Validators.required],\n        staticTan: [{\n          value: '',\n          disabled: true\n        }],\n        usesStaticTan: [false],\n        decoupled: [false],\n        valid: [false],\n        pushMethod: ['']\n      });\n      scaData.get('usesStaticTan').valueChanges.subscribe((bool = true) => {\n        if (bool) {\n          scaData.get('staticTan').setValidators([Validators.required, Validators.pattern(new RegExp(/\\d{6}/))]);\n          scaData.get('staticTan').enable();\n        } else {\n          scaData.get('staticTan').clearValidators();\n          scaData.get('staticTan').disable();\n          scaData.get('staticTan').setValue('');\n        }\n        scaData.get('staticTan').updateValueAndValidity();\n      });\n      scaData.get('scaMethod').valueChanges.subscribe(value => {\n        if (value === ScaMethods.SMTP_OTP) {\n          scaData.get('methodValue').setValidators(emailValidators);\n        } else if (value === ScaMethods.MOBILE) {\n          scaData.get('methodValue').setValidators([Validators.required, Validators.pattern(new RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/))]);\n        } else if (value === ScaMethods.PUSH_OTP) {\n          scaData.get('methodValue').clearValidators();\n        } else {\n          scaData.get('methodValue').setValidators([Validators.required]);\n        }\n        scaData.get('methodValue').updateValueAndValidity();\n      });\n      scaData.get('scaMethod').setValue('SMTP_OTP');\n      return scaData;\n    }\n    getUserDetails() {\n      this.userService.getUser(this.userId).subscribe(item => {\n        this.user = item;\n        this.updateUserForm.patchValue({\n          email: this.user.email,\n          login: this.user.login\n        });\n        const scaUserData = this.updateUserForm.get('scaUserData');\n        this.user.scaUserData.forEach((value, i) => {\n          this.extractScaData(value);\n          if (scaUserData.length < i + 1) {\n            scaUserData.push(this.initScaData());\n          }\n          scaUserData.at(i).patchValue(value);\n        });\n      });\n    }\n    extractScaData(data) {\n      if (data.scaMethod === 'PUSH_OTP') {\n        const strings = data.methodValue.split(',');\n        data.pushMethod = strings[0];\n        data.methodValue = strings[1];\n      }\n    }\n    updateValue(user) {\n      user.scaUserData.forEach(d => {\n        if (d.scaMethod === 'PUSH_OTP') {\n          if (d.pushMethod === '' || d.pushMethod === undefined) {\n            d.pushMethod = 'POST';\n          }\n          if (d.methodValue === '' || d.methodValue === undefined) {\n            d.methodValue = this.url;\n          }\n          d.methodValue = d.pushMethod + ',' + d.methodValue;\n        }\n        d.pushMethod = undefined;\n      });\n    }\n    addScaDataItem() {\n      const control = this.updateUserForm.controls['scaUserData'];\n      control.push(this.initScaData());\n    }\n    removeScaDataItem(i) {\n      const control = this.updateUserForm.controls['scaUserData'];\n      control.removeAt(i);\n    }\n    getMethodsValues() {\n      this.methods = Object.keys(ScaMethods);\n      this.httpMethods = Object.keys(HttpMethod);\n    }\n    onCancel() {\n      if (this.user) {\n        this.router.navigate(['/users/' + `${this.userId}`]);\n      }\n    }\n    resetPasswordViaEmail(login) {\n      this.tppUserService.resetPasswordViaEmail(login).subscribe(() => {\n        this.infoService.openFeedback('Link for password reset was sent, check email.', {\n          severity: 'info'\n        });\n      });\n    }\n    static #_ = this.ɵfac = function UserUpdateComponent_Factory(t) {\n      return new (t || UserUpdateComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.TppUserService), i0.ɵɵdirectiveInject(i4.TppManagementService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.InfoService), i0.ɵɵdirectiveInject(i7.SettingsService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserUpdateComponent,\n      selectors: [[\"app-user-update\"]],\n      decls: 49,\n      vars: 14,\n      consts: [[1, \"container-fluid\"], [1, \"card\"], [1, \"border-bottom\"], [1, \"card-body\"], [4, \"ngIf\", \"ngIfElse\"], [\"noUserLogin\", \"\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\", \"pb-0\"], [1, \"row\"], [1, \"col-12\", \"col-md-6\", \"mb-3\"], [\"for\", \"email\", 1, \"control-label\"], [\"aria-describedby\", \"emailHelp\", \"autocomplete\", \"off\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"type\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"col-12\"], [\"for\", \"login\", 1, \"control-label\"], [\"aria-describedby\", \"emailHelp\", \"autocomplete\", \"off\", \"formControlName\", \"login\", \"id\", \"login\", \"placeholder\", \"Enter user online banking login\", \"type\", \"text\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"me-4\", \"ms-3\", 3, \"click\"], [\"formArrayName\", \"scaUserData\"], [1, \"d-block\", \"d-md-flex\", \"justify-content-between\"], [1, \"d-inline\"], [1, \"\"], [1, \"d-flex\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"box mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group2\", \"d-flex\", \"flex-row\", \"justify-content-lg-between\"], [1, \"btn\", \"me-sm-2\", \"me-md-3\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"header__title\"], [1, \"invalid-feedback\"], [1, \"box\", \"mb-4\"], [\"aria-label\", \"Close\", \"class\", \"btn-close box__close-icon\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"col-12\", \"col-md-8\"], [1, \"mb-3\", 3, \"formGroupName\"], [1, \"control-label\", 3, \"for\"], [1, \"custom-row\"], [\"formControlName\", \"pushMethod\", \"class\", \"form-control push-select\", 4, \"ngIf\"], [\"aria-describedby\", \"scaDataHelp\", \"formControlName\", \"methodValue\", \"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"id\", \"placeholder\"], [1, \"col-12\", \"col-md-4\", \"margin-top\"], [1, \"control-label\"], [3, \"formGroupName\"], [\"formControlName\", \"scaMethod\", 1, \"form-control\"], [3, \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"aria-describedby\", \"scaDataHelp\", \"formControlName\", \"staticTan\", \"placeholder\", \"Please input Static TAN if required\", \"type\", \"text\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-12\", \"col-md-4\", \"my-auto\"], [1, \"form-check\", \"me-4\"], [\"formControlName\", \"usesStaticTan\", \"type\", \"checkbox\", \"value\", \"false\", 1, \"form-check-input\", 3, \"id\"], [1, \"form-check-label\", 3, \"for\"], [\"aria-label\", \"Close\", \"type\", \"button\", 1, \"btn-close\", \"box__close-icon\", 3, \"click\"], [\"formControlName\", \"pushMethod\", 1, \"form-control\", \"push-select\"], [3, \"selected\"]],\n      template: function UserUpdateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtemplate(4, UserUpdateComponent_div_4_Template, 3, 1, \"div\", 4);\n          i0.ɵɵtemplate(5, UserUpdateComponent_ng_template_5_Template, 2, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function UserUpdateComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"h5\");\n          i0.ɵɵtext(10, \"Update user Information\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 2)(12, \"div\", 3)(13, \"div\", 8)(14, \"div\", 9)(15, \"label\", 10);\n          i0.ɵɵtext(16, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 11);\n          i0.ɵɵtemplate(18, UserUpdateComponent_div_18_Template, 2, 0, \"div\", 12);\n          i0.ɵɵtemplate(19, UserUpdateComponent_div_19_Template, 2, 0, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 13)(21, \"div\", 8)(22, \"div\", 9)(23, \"label\", 14);\n          i0.ɵɵtext(24, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 15);\n          i0.ɵɵtemplate(26, UserUpdateComponent_div_26_Template, 2, 0, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 8)(28, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function UserUpdateComponent_Template_button_click_28_listener() {\n            return ctx.resetPasswordViaEmail(ctx.user.login);\n          });\n          i0.ɵɵtext(29, \" Send password update link \");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(30, \"div\", 17)(31, \"div\", 3)(32, \"div\", 18)(33, \"h2\", 19);\n          i0.ɵɵtext(34, \"Update authentication Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"div\", 20)(36, \"div\", 21)(37, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function UserUpdateComponent_Template_button_click_37_listener() {\n            return ctx.addScaDataItem();\n          });\n          i0.ɵɵelementStart(38, \"mat-icon\");\n          i0.ɵɵtext(39, \"add_circle_outline\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(40, \" Add SCA method \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(41, \"div\", 2)(42, \"div\", 3);\n          i0.ɵɵtemplate(43, UserUpdateComponent_div_43_Template, 32, 24, \"div\", 23);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"div\", 24)(45, \"button\", 25);\n          i0.ɵɵlistener(\"click\", function UserUpdateComponent_Template_button_click_45_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(46, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"button\", 26);\n          i0.ɵɵtext(48, \"Update\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(6);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.formControl[\"login\"].value)(\"ngIfElse\", _r1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.updateUserForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c1, (ctx.formControl[\"email\"].touched || ctx.submitted) && ctx.formControl[\"email\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.formControl[\"email\"].touched || ctx.submitted) && ctx.formControl[\"email\"].hasError(\"required\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.formControl[\"email\"].touched || ctx.submitted) && ctx.formControl[\"email\"].hasError(\"email\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, (ctx.formControl[\"login\"].touched || ctx.submitted) && ctx.formControl[\"login\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.formControl[\"login\"].touched || ctx.submitted) && ctx.formControl[\"login\"].hasError(\"required\"));\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngForOf\", ctx.formControl[\"scaUserData\"][\"controls\"]);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.updateUserForm.invalid);\n        }\n      },\n      dependencies: [i8.NgClass, i8.NgForOf, i8.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName, i9.MatIcon, i10.MatButton],\n      styles: [\".card-body[_ngcontent-%COMP%]{padding:2rem}.icon[_ngcontent-%COMP%]{width:25px;height:25px;padding-left:3px}.form-group2[_ngcontent-%COMP%]{padding:20px 31px}.push-select[_ngcontent-%COMP%]{width:10%}.input-method[_ngcontent-%COMP%]{width:89.5%}.custom-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-direction:row;align-items:center}\"]\n    });\n  }\n  return UserUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}