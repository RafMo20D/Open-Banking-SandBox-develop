{"ast":null,"code":"import { UploadService } from '../../services/upload.service';\nimport { InfoService } from '../info/info.service';\nimport { SpinnerVisibilityService } from 'ng-http-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/upload.service\";\nimport * as i2 from \"ng-http-loader\";\nimport * as i3 from \"../info/info.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../icon/icon.component\";\nimport * as i6 from \"ng2-file-upload\";\nfunction DocumentUploadComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 3);\n    i0.ɵɵlistener(\"fileOver\", function DocumentUploadComponent_div_0_Template_label_fileOver_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.fileOverBase($event));\n    });\n    i0.ɵɵelementStart(2, \"span\", 4)(3, \"span\", 5);\n    i0.ɵɵelement(4, \"app-icon\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 7);\n    i0.ɵɵtext(6, \"Drop file or click here\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"uploader\", ctx_r0.uploader)(\"for\", ctx_r0.id);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"accept\", ctx_r0.acceptedMimes)(\"uploader\", ctx_r0.uploader)(\"id\", ctx_r0.id);\n  }\n}\nfunction DocumentUploadComponent_table_2_tr_8_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function DocumentUploadComponent_table_2_tr_8_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const item_r6 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(item_r6.upload());\n    });\n    i0.ɵɵelement(1, \"i\", 17);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"Upload\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"disabled\", item_r6.isUploading || item_r6.isSuccess);\n  }\n}\nfunction DocumentUploadComponent_table_2_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 10)(2, \"small\")(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"td\", 12);\n    i0.ɵɵtemplate(6, DocumentUploadComponent_table_2_tr_8_button_6_Template, 4, 1, \"button\", 13);\n    i0.ɵɵelementStart(7, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DocumentUploadComponent_table_2_tr_8_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const item_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r6.remove());\n    });\n    i0.ɵɵelement(8, \"i\", 15);\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r6 == null ? null : item_r6.file == null ? null : item_r6.file.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.uploader.queue.length === 1);\n  }\n}\nfunction DocumentUploadComponent_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"thead\")(2, \"tr\")(3, \"th\", 10);\n    i0.ɵɵtext(4, \"Filename\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 10);\n    i0.ɵɵtext(6, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, DocumentUploadComponent_table_2_tr_8_Template, 11, 2, \"tr\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.uploader.queue);\n  }\n}\nfunction DocumentUploadComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\n// Increasing integer for generating unique ids for document-upload components.\nlet nextUniqueId = 0;\nexport let DocumentUploadComponent = /*#__PURE__*/(() => {\n  class DocumentUploadComponent {\n    constructor(uploadService, spinner, infoService) {\n      this.uploadService = uploadService;\n      this.spinner = spinner;\n      this.infoService = infoService;\n      this._uniqueId = `document-upload-${++nextUniqueId}`;\n      /** A unique id for the document-upload input. If none is supplied, it will be auto-generated. */\n      this.id = this._uniqueId;\n      this.hasBaseDropZoneOver = true;\n    }\n    get acceptedMimes() {\n      return this.options && this.options.allowedMimeType ? this.options.allowedMimeType.join(',') : null;\n    }\n    ngOnInit() {\n      this.uploader = this.uploadService.createInstanceFileUploader(this.options);\n      /* Ensure again that the number of up-to-load file is always one and get the image path for preview */\n      this.uploader.onAfterAddingFile = () => this.onAfterAddingFile();\n      this.uploader.onProgressAll = () => {\n        this.spinner.show();\n      };\n      this.uploader.response.subscribe(() => {\n        this.spinner.hide();\n      });\n      this.uploader.onCompleteItem = (item, response, status) => {\n        if (this.options.methodAfterSuccess && typeof this.options.methodAfterSuccess === 'function') {\n          this.options.methodAfterSuccess(item, response);\n        }\n        if (status !== 200 && status !== 201) {\n          this.infoService.openFeedback('File was not uploaded. Check your file, please!');\n        } else {\n          this.infoService.openFeedback('File successfully uploaded');\n        }\n      };\n      this.uploader.onWhenAddingFileFailed = (item, filter) => {\n        if (filter.name === 'mimeType' || filter.name === 'fileSize') {\n          let extensions = '';\n          if (this.options.allowedMimeType) {\n            this.options.allowedMimeType.forEach(extension => {\n              extensions = extensions + extension.split('/').pop() + ', ';\n            });\n          }\n          const message = 'ERROR UPLOAD' + filter.name;\n          this.infoService.openFeedback(message, {\n            severity: 'error'\n          });\n        }\n      };\n    }\n    fileOverBase(e) {\n      this.hasBaseDropZoneOver = e;\n    }\n    onAfterAddingFile() {\n      if (this.options.queueLimit === 1) {\n        if (this.uploader.queue.length > 1) {\n          this.uploader.removeFromQueue(this.uploader.queue[0]);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function DocumentUploadComponent_Factory(t) {\n      return new (t || DocumentUploadComponent)(i0.ɵɵdirectiveInject(i1.UploadService), i0.ɵɵdirectiveInject(i2.SpinnerVisibilityService), i0.ɵɵdirectiveInject(i3.InfoService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DocumentUploadComponent,\n      selectors: [[\"app-document-upload\"]],\n      inputs: {\n        id: \"id\",\n        options: \"options\"\n      },\n      decls: 4,\n      vars: 3,\n      consts: [[4, \"ngIf\"], [1, \"col-12\"], [\"class\", \"table\", 4, \"ngIf\"], [\"ng2FileDrop\", \"\", 1, \"drop-zone\", \"d-flex\", \"justify-content-center\", 3, \"uploader\", \"for\", \"fileOver\"], [1, \"drop-text\"], [1, \"icon\"], [\"inline\", \"true\", \"svgIcon\", \"upload\"], [1, \"d-block\"], [\"ng2FileSelect\", \"\", \"type\", \"file\", 1, \"fileInput\", 3, \"accept\", \"uploader\", \"id\"], [1, \"table\"], [1, \"col-4\"], [4, \"ngFor\", \"ngForOf\"], [\"nowrap\", \"\"], [\"class\", \"btn btn-primary me-1\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa\", \"fa-remove\"], [1, \"btn\", \"btn-primary\", \"me-1\", 3, \"disabled\", \"click\"], [1, \"fa\", \"fa-upload\"], [1, \"mb-3\"]],\n      template: function DocumentUploadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, DocumentUploadComponent_div_0_Template, 8, 5, \"div\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1);\n          i0.ɵɵtemplate(2, DocumentUploadComponent_table_2_Template, 9, 1, \"table\", 2);\n          i0.ɵɵtemplate(3, DocumentUploadComponent_div_3_Template, 2, 0, \"div\", 0);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.uploader.queue.length === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.uploader.queue.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.uploader.queue.length > 0);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.IconComponent, i6.FileDropDirective, i6.FileSelectDirective],\n      styles: [\"[_ngcontent-%COMP%]:root{--fontFamily: \\\"Verdana\\\", sans-serif;--textFontSize: 1rem;--textFontWeight: bold;--textFontSize768px: 1rem;--textFontWeight768px: bold;--textFontSize1024px: 1rem;--textFontWeight1024px: bold;--h1FontSize: 2rem;--h1FontWeight: bold;--h2FontSize: 1.8rem;--h2FontWeight: 700;--h3FontSize: 1rem;--h3FontWeight: normal;--h1FontSize768px: 2rem;--h1FontWeight768px: bold;--h1FontSize1024px: 2rem;--h1FontWeight1024px: bold;--h2FontSize768px: 1.5rem;--h2FontWeight768px: bold;--h2FontSize1024px: 1.5rem;--h2FontWeight1024px: bold;--h3FontSize768px: 1rem;--h3FontWeight768px: normal;--h3FontSize1024px: 1rem;--h3FontWeight1024px: normal;--colorPrimary: #13bf9f;--colorSecondary: #13bf9f;--tr-color: #000000;--bodyBG: #fff;--bodyFontColor: #212529;--mainBG: #f8f8f8;--menuItemHovered: white;--headerBG: #ffffff;--headerFontColor: #000000;--headerBorderTop: 0px;--footerBG: #054f72;--footerFontColor: #ffffff;--anchorFontColor: #2c2e2f;--anchorFontColorHover: #13bf9f;--button-heigh: 50px;--buttonTextColor: #fff;--buttonBorderRadius: 3px;--buttonColorTextDisabled: #fff;--buttonBGDisabled: linear-gradient(129.54deg, var(--buttonBgGradient1) 0%, var(--buttonBgGradient2) 100%);--button-opacity: .65;--button-heigh: 56px;--btn-padding: 15px 12px;--buttonBgGradient1: #13b4bf;--buttonBgGradient2: #0a8f70;--buttonBG: linear-gradient(129.54deg, var(--buttonBgGradient1) 0%, var(--buttonBgGradient2) 100%);--buttonHoveredGradient1: #059c85;--buttonHoveredGradient2: #0a8f70;--buttonHovered: linear-gradient(129.54deg, var(--buttonHoveredGradient1) 0%, var(--buttonHoveredGradient2) 100%);--buttonClickedGradient1: #13b4bf;--buttonClickedGradient2: #008073;--buttonClicked: linear-gradient(129.54deg, var(--buttonClickedGradient1) 0%, var(--buttonClickedGradient2) 100%);--secondaryButtonTextColor: #dc3545;--secondaryButtonBG: white;--secondaryButtonHoveredTextColor: white;--secondaryButtonHovered: #dc3545;--secondaryButtonClickedTextColor: white;--secondaryButtonClicked: #dc3545;--secondaryButtonBorderStyle: 1px solid #dc3545;--inputBG: white;--inputBorderStyleLeft: 1px solid #a0a0a0;--inputBorderStyleRight: 1px solid #a0a0a0;--inputBorderStyleBottom: 1px solid #a0a0a0;--inputBorderStyleTop: 1px solid #a0a0a0;--inputBorderRadius: .25rem;--selectBG: white;--selectColor: #3b4151;--selectBorderStyleLeft: none;--selectBorderStyleRight: none;--selectBorderStyleBottom: none;--selectBorderStyleTop: none;--selectBorderRadius: none;--margin-form-group: 0 0 4rem 0;--form-group-height: 3.5rem;--border-bottom: none;--margin-top-icon: 6px;--arrow-url: url(/assets/icons/arrow-down.svg)}.drop-zone[_ngcontent-%COMP%]{color:#a0a0a0;height:200px;font-size:1.5rem;text-align:center;width:100%;background-color:#f8f8f8}.fileInput[_ngcontent-%COMP%]{display:none}th[_ngcontent-%COMP%]{text-align:left}.my-drop-zone[_ngcontent-%COMP%]{border:dotted 3px #a0a0a0}.nv-file-over[_ngcontent-%COMP%]{border:dotted 3px red}.another-file-over-class[_ngcontent-%COMP%]{border:dotted 3px green}.drop-text[_ngcontent-%COMP%]{margin-top:10px}.drop-text[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{display:block;width:4rem;height:4rem;margin:25px auto}label[_ngcontent-%COMP%]{border:2px dashed #a0a0a0}\"]\n    });\n  }\n  return DocumentUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}