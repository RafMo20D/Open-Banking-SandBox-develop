{"ast":null,"code":"/*\r\n * Copyright 2018-2023 adorsys GmbH & Co KG\r\n *\r\n * This program is free software: you can redistribute it and/or modify it\r\n * under the terms of the GNU Affero General Public License as published\r\n * by the Free Software Foundation, either version 3 of the License, or (at\r\n * your option) any later version. This program is distributed in the hope that\r\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n * See the GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see https://www.gnu.org/licenses/.\r\n *\r\n * This project is also available under a separate commercial license. You can\r\n * contact us at psd2@adorsys.com.\r\n */\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ErrorHandler } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModalModule, NgbPaginationModule, NgbTypeaheadModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgHttpLoaderModule } from 'ng-http-loader';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IconModule } from './commons/icon/icon.module';\nimport { InfoModule } from './commons/info/info.module';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthInterceptor } from './interceptors/auth-interceptor';\nimport { GlobalErrorsHandler } from './interceptors/global-errors-handler';\nimport { AutoLogoutService } from './services/auto-logout.service';\nimport { SettingsHttpService } from './services/settings-http.service';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { RecoveryPointState } from './state/recoverypoints.state';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng-http-loader\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nimport * as i3 from \"ngx-bootstrap/typeahead\";\nimport * as i4 from \"@ngxs/store\";\nimport * as i5 from \"@ngxs/devtools-plugin\";\nimport * as i6 from \"@ngxs/logger-plugin\";\nexport function app_Init(settingsHttpService) {\n  return () => settingsHttpService.initializeApp();\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [AutoLogoutService, BsModalRef, AuthGuard, {\n        provide: APP_INITIALIZER,\n        useFactory: app_Init,\n        deps: [SettingsHttpService],\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }, {\n        provide: ErrorHandler,\n        useClass: GlobalErrorsHandler\n      }],\n      imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, ReactiveFormsModule, NgbTypeaheadModule, IconModule, InfoModule, BrowserAnimationsModule, AppRoutingModule, FileUploadModule, FilterPipeModule, NgHttpLoaderModule.forRoot(), NgbModalModule, NgbPaginationModule, ModalModule.forRoot(), TypeaheadModule.forRoot(), NgxsModule.forRoot([RecoveryPointState]), NgxsReduxDevtoolsPluginModule.forRoot(), NgxsLoggerPluginModule.forRoot(), MatIconModule, MatButtonModule, MatTooltipModule, MatSnackBarModule, MatDialogModule, MatExpansionModule, NgbModule]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}