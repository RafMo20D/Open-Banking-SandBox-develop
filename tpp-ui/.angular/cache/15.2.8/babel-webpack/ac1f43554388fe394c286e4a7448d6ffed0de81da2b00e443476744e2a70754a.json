{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { TestDataGenerationService } from '../services/test.data.generation.service';\nimport { InfoService } from '../commons/info/info.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/test.data.generation.service\";\nimport * as i2 from \"../commons/info/info.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/expansion\";\nimport * as i6 from \"../commons/document-upload/document-upload.component\";\nfunction UploadFileComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"div\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"app-document-upload\", 11);\n    i0.ɵɵelementStart(5, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function UploadFileComponent_div_35_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const uploadDataConfig_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.generateFileExample(uploadDataConfig_r1));\n    });\n    i0.ɵɵtext(6, \"Download template\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const uploadDataConfig_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(uploadDataConfig_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", uploadDataConfig_r1);\n  }\n}\nexport let UploadFileComponent = /*#__PURE__*/(() => {\n  class UploadFileComponent {\n    constructor(generationService, infoService) {\n      this.generationService = generationService;\n      this.infoService = infoService;\n      this.url = `${environment.tppBackend}`;\n      this.message = 'Test data has been successfully generated.';\n    }\n    ngOnInit() {\n      this.uploadDataConfigs = [{\n        exampleFileName: 'Users-Accounts-Balances-Payments-Example.yml',\n        title: 'Upload Users/Accounts/Balances/Payments',\n        method: 'PUT',\n        url: this.url + '/data/upload',\n        exampleFileUrl: '/accounts/example'\n      }, {\n        exampleFileName: 'Consents-Example.yml',\n        title: 'Upload AIS Consents',\n        method: 'PUT',\n        url: this.url + '/consent',\n        exampleFileUrl: '/consent/example'\n      }, {\n        exampleFileName: 'Transactions-Example.csv',\n        title: 'Upload Transactions',\n        method: 'PUT',\n        url: this.url + '/data/upload/transactions',\n        exampleFileUrl: '/data/example'\n      }];\n    }\n    generateFileExample(uploadDataConfig) {\n      return this.generationService.generateExampleTestData(uploadDataConfig.exampleFileUrl).subscribe(data => {\n        this.infoService.openFeedback(this.message);\n        const blob = new Blob([data], {\n          type: 'plain/text'\n        });\n        const link = document.createElement('a');\n        link.setAttribute('href', window.URL.createObjectURL(blob));\n        link.setAttribute('download', uploadDataConfig.exampleFileName);\n        document.body.appendChild(link);\n        link.click();\n      });\n    }\n    static #_ = this.ɵfac = function UploadFileComponent_Factory(t) {\n      return new (t || UploadFileComponent)(i0.ɵɵdirectiveInject(i1.TestDataGenerationService), i0.ɵɵdirectiveInject(i2.InfoService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UploadFileComponent,\n      selectors: [[\"app-upload-file\"]],\n      decls: 36,\n      vars: 3,\n      consts: [[1, \"container-fluid\"], [1, \"mb-4\"], [3, \"opened\", \"closed\"], [1, \"font-weight-bold\"], [\"aria-hidden\", \"false\", \"aria-label\", \"Info Icon\"], [\"href\", \"http://randomiban.com/?country=Germany\", 1, \"link-color\"], [1, \"ms-4\"], [\"class\", \"card mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-4\"], [1, \"card-body--large\"], [1, \"header__title\", \"mb-4\"], [3, \"options\"], [1, \"btn\", \"btn-primary\", \"mb-0\", \"mt-3\", 3, \"click\"]],\n      template: function UploadFileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-accordion\", 1)(3, \"mat-expansion-panel\", 2);\n          i0.ɵɵlistener(\"opened\", function UploadFileComponent_Template_mat_expansion_panel_opened_3_listener() {\n            return ctx.panelOpenState = true;\n          })(\"closed\", function UploadFileComponent_Template_mat_expansion_panel_closed_3_listener() {\n            return ctx.panelOpenState = false;\n          });\n          i0.ɵɵelementStart(4, \"mat-expansion-panel-header\")(5, \"mat-panel-title\")(6, \"div\", 3)(7, \"mat-icon\", 4);\n          i0.ɵɵtext(8, \"info\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(9, \" NOTE: All IBANs for new users should be valid \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-panel-description\");\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtext(12, \" All IBANs which are used for consents, payments and transactions uploading should belong to existing users. \");\n          i0.ɵɵelement(13, \"br\");\n          i0.ɵɵtext(14, \" Here you can find a \");\n          i0.ɵɵelementStart(15, \"a\", 5);\n          i0.ɵɵtext(16, \" random iban generator\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(17, \".\");\n          i0.ɵɵelement(18, \"br\")(19, \"br\");\n          i0.ɵɵelementStart(20, \"p\");\n          i0.ɵɵtext(21, \"Examples of existing IBANs possible to be used for transactions and payments:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"ul\", 6)(23, \"li\");\n          i0.ɵɵtext(24, \"PSU-ID: marion.mueller, IBAN: DE69760700240340283600\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"li\");\n          i0.ɵɵtext(26, \"PSU-ID: anton.brueckner, IBAN: DE80760700240271232400\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"li\");\n          i0.ɵɵtext(28, \"PSU-ID: max.musterman, IBAN: DE38760700240320465700\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"li\");\n          i0.ɵɵtext(30, \"PSU-ID: carl.schwarz, IBAN: DE87760320000000000001\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"li\");\n          i0.ɵɵtext(32, \"PSU-ID: carl.schwarz, IBAN: DE60760320000000000002\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"li\");\n          i0.ɵɵtext(34, \"PSU-ID: carl.schwarz, IBAN: DE33760320000000000003\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(35, UploadFileComponent_div_35_Template, 7, 2, \"div\", 7);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵtextInterpolate2(\" \", ctx.panelOpenState ? \"Close\" : \"Open\", \" for \", ctx.panelOpenState ? \"less\" : \"more\", \" infos \");\n          i0.ɵɵadvance(24);\n          i0.ɵɵproperty(\"ngForOf\", ctx.uploadDataConfigs);\n        }\n      },\n      dependencies: [i3.NgForOf, i4.MatIcon, i5.MatAccordion, i5.MatExpansionPanel, i5.MatExpansionPanelHeader, i5.MatExpansionPanelTitle, i5.MatExpansionPanelDescription, i6.DocumentUploadComponent],\n      styles: [\".my-drop-zone[_ngcontent-%COMP%]{border:dotted 3px lightgray}.nv-file-over[_ngcontent-%COMP%]{border:dotted 3px red}.another-file-over-class[_ngcontent-%COMP%]{border:dotted 3px green}.link-color[_ngcontent-%COMP%]{color:#13bf9f}.mat-icon[_ngcontent-%COMP%]{vertical-align:middle;color:#13bf9f}\"]\n    });\n  }\n  return UploadFileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}