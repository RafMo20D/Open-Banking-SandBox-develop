{"ast":null,"code":"/*\r\n * Copyright 2018-2023 adorsys GmbH & Co KG\r\n *\r\n * This program is free software: you can redistribute it and/or modify it\r\n * under the terms of the GNU Affero General Public License as published\r\n * by the Free Software Foundation, either version 3 of the License, or (at\r\n * your option) any later version. This program is distributed in the hope that\r\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\r\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n * See the GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see https://www.gnu.org/licenses/.\r\n *\r\n * This project is also available under a separate commercial license. You can\r\n * contact us at psd2@adorsys.com.\r\n */\nimport { NgZone } from '@angular/core';\nimport { CustomizeService } from './services/customize.service';\nimport { Title } from '@angular/platform-browser';\nimport { CountryService } from './services/country.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/customize.service\";\nimport * as i2 from \"./services/country.service\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ng-http-loader\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(customizeService, countryService, titleService, ngZone) {\n      this.customizeService = customizeService;\n      this.countryService = countryService;\n      this.titleService = titleService;\n      this.ngZone = ngZone;\n      this.title = 'app';\n    }\n    ngOnInit() {\n      this.countryService.loadCountries();\n      let theme;\n      this.customizeService.getJSON().subscribe(data => {\n        this.ngZone.run(() => {\n          theme = data;\n          this.globalSettings = theme.globalSettings;\n          if (theme.globalSettings.logo.indexOf('/') === -1) {\n            theme.globalSettings.logo = '../assets/UI' + (this.customizeService.isCustom() ? '/custom/' : '/') + theme.globalSettings.logo;\n          }\n          if (theme.globalSettings.favicon && theme.globalSettings.favicon.href.indexOf('/') === -1) {\n            theme.globalSettings.favicon.href = '../assets/UI' + (this.customizeService.isCustom() ? '/custom/' : '/') + theme.globalSettings.favicon.href;\n          }\n          const title = theme.globalSettings.title;\n          if (title) {\n            this.titleService.setTitle(title);\n          }\n          this.customizeService.setUserTheme(theme);\n        });\n      });\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CustomizeService), i0.ɵɵdirectiveInject(i2.CountryService), i0.ɵɵdirectiveInject(i3.Title), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 2,\n      vars: 2,\n      consts: [[3, \"debounceDelay\", \"minDuration\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\")(1, \"ng-http-loader\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"debounceDelay\", 500)(\"minDuration\", 1200);\n        }\n      },\n      dependencies: [i4.RouterOutlet, i5.NgHttpLoaderComponent]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}