{"ast":null,"code":"import { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction InfoComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function InfoComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.animateClose());\n    });\n    i0.ɵɵelementStart(1, \"i\", 4);\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let InfoComponent = /*#__PURE__*/(() => {\n  class InfoComponent {\n    constructor() {\n      this.onDestroy = new Subject();\n      this.onDestroy$ = this.onDestroy.asObservable();\n      this.animationState = 'void';\n    }\n    open(message, options) {\n      this.message = message;\n      this.options = options;\n      this.animationState = '*';\n    }\n    animateClose() {\n      this.animationState = 'void';\n      clearTimeout(this.durationTimeoutId);\n    }\n    /**\r\n     * This is called after the animation is done by Angular\r\n     * The state decides whether the component should be destroyed or not\r\n     */\n    animationDone() {\n      if (this.animationState === 'void') {\n        this.onDestroy.next();\n      } else if (this.animationState === '*') {\n        if (this.options) {\n          this.dismissAfter(this.options.duration);\n        }\n      }\n    }\n    dismissAfter(duration) {\n      if (duration && duration > 0) {\n        this.durationTimeoutId = setTimeout(() => this.animateClose(), duration);\n      }\n    }\n    static #_ = this.ɵfac = function InfoComponent_Factory(t) {\n      return new (t || InfoComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InfoComponent,\n      selectors: [[\"app-feedback\"]],\n      decls: 4,\n      vars: 4,\n      consts: [[1, \"feedback-message-container\", 3, \"ngClass\"], [1, \"message\"], [\"class\", \"close-button\", 3, \"click\", 4, \"ngIf\"], [1, \"close-button\", 3, \"click\"], [1, \"material-icons\"]],\n      template: function InfoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵlistener(\"@feedbackAnimation.done\", function InfoComponent_Template_div_animation_feedbackAnimation_done_0_listener() {\n            return ctx.animationDone();\n          });\n          i0.ɵɵelementStart(1, \"span\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, InfoComponent_button_3_Template, 3, 0, \"button\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.options == null ? null : ctx.options.severity)(\"@feedbackAnimation\", ctx.animationState);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.message);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.options == null ? null : ctx.options.closable);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgIf],\n      styles: [\"/*!\\n * Copyright 2018-2023 adorsys GmbH & Co KG\\n *\\n * This program is free software: you can redistribute it and/or modify it\\n * under the terms of the GNU Affero General Public License as published\\n * by the Free Software Foundation, either version 3 of the License, or (at\\n * your option) any later version. This program is distributed in the hope that\\n * it will be useful, but WITHOUT ANY WARRANTY; without even the implied\\n * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n * See the GNU Affero General Public License for more details.\\n *\\n * You should have received a copy of the GNU Affero General Public License\\n * along with this program. If not, see https://www.gnu.org/licenses/.\\n *\\n * This project is also available under a separate commercial license. You can\\n * contact us at psd2@adorsys.com.\\n */.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.feedback-message-container{display:inline-flex;border-radius:6px;box-shadow:0 0 16px #00000040;padding:18px 24px;align-items:center;min-width:300px;box-sizing:border-box;z-index:1020!important}.feedback-message-container .message{letter-spacing:.0625rem;font-size:.8rem}.feedback-message-container .close-button{position:absolute;display:flex;justify-content:center;align-items:center;top:-13px;right:-13px;cursor:pointer;background:white;border-radius:50%;border:none;margin:0;padding:0;width:26px;height:26px;box-shadow:0 0 20px #0003}.feedback-message-container .close-button i{font-size:16px}.feedback-message-container.info{background-color:#fff}.feedback-message-container.info .message{color:#000}.feedback-message-container.info .close-button{background-color:#40445a;color:#fff}.feedback-message-container.warn{background-color:#ff6f00}.feedback-message-container.warn .message{color:#fff}.feedback-message-container.warn .close-button{color:#ff6f00}.feedback-message-container.error{background-color:#b71c1c}.feedback-message-container.error .message{color:#fff}.feedback-message-container.error .close-button{color:#b71c1c}\\n\"],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('feedbackAnimation', [state('void', style({\n          transform: 'translateY(100%)',\n          opacity: 0\n        })), state('*', style({\n          transform: 'translateY(0)',\n          opacity: 1\n        })), transition('* <=> void', animate(`400ms cubic-bezier(0.4, 0, 0.1, 1)`))])]\n      }\n    });\n  }\n  return InfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}