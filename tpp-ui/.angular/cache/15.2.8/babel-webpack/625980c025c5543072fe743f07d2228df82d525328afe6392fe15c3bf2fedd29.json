{"ast":null,"code":"import { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { CustomizeService } from '../../../services/customize.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/customize.service\";\nimport * as i5 from \"@angular/common\";\nfunction ConfirmNewPasswordComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction ConfirmNewPasswordComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"New PIN is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConfirmNewPasswordComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Code is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let ConfirmNewPasswordComponent = /*#__PURE__*/(() => {\n  class ConfirmNewPasswordComponent {\n    constructor(authService, formBuilder, router, customizeService) {\n      this.authService = authService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.customizeService = customizeService;\n    }\n    ngOnInit() {\n      this.confirmNewPasswordForm = this.formBuilder.group({\n        newPassword: ['', Validators.required],\n        code: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.confirmNewPasswordForm.invalid) {\n        this.submitted = true;\n        this.errorMessage = 'Please enter your credentials';\n        return;\n      }\n      this.authService.changePassword(this.confirmNewPasswordForm.value).subscribe(() => this.router.navigate(['/login']));\n    }\n    static #_ = this.ɵfac = function ConfirmNewPasswordComponent_Factory(t) {\n      return new (t || ConfirmNewPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CustomizeService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ConfirmNewPasswordComponent,\n      selectors: [[\"app-confirm-new-password\"]],\n      decls: 27,\n      vars: 11,\n      consts: [[1, \"bg-sm-light\", \"sticky-top\"], [1, \"container-fluid\"], [1, \"navbar\", \"navbar-light\", \"text-primary\", \"py-3\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"logo\", 3, \"src\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card\"], [1, \"card-body\"], [1, \"card__headline\", \"text-center\"], [1, \"card-title\", \"font-weight-bold\"], [1, \"my-4\", \"card__subtitle\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form__margin\"], [1, \"mb-3\"], [\"for\", \"newPassword\"], [\"autocomplete\", \"off\", \"formControlName\", \"newPassword\", \"id\", \"newPassword\", \"type\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"formControlName\", \"code\", \"id\", \"code\", \"type\", \"text\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"]],\n      template: function ConfirmNewPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"nav\", 2)(3, \"a\", 3);\n          i0.ɵɵelement(4, \"img\", 4);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(5, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function ConfirmNewPasswordComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"h2\", 9);\n          i0.ɵɵtext(10, \"Reset PIN\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 10);\n          i0.ɵɵtext(12, \"Please enter the received code and your new PIN\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, ConfirmNewPasswordComponent_div_13_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementStart(14, \"div\", 12)(15, \"div\", 13)(16, \"label\", 14);\n          i0.ɵɵtext(17, \"New PIN*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 15);\n          i0.ɵɵtemplate(19, ConfirmNewPasswordComponent_div_19_Template, 2, 0, \"div\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 13)(21, \"label\", 14);\n          i0.ɵɵtext(22, \"Code*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 17);\n          i0.ɵɵtemplate(24, ConfirmNewPasswordComponent_div_24_Template, 2, 0, \"div\", 16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"button\", 18);\n          i0.ɵɵtext(26, \"Reset PIN\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"src\", ctx.customizeService.getLogo(), i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.confirmNewPasswordForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ((tmp_3_0 = ctx.confirmNewPasswordForm.get(\"newPassword\")) == null ? null : tmp_3_0.errors) && ((tmp_3_0 = ctx.confirmNewPasswordForm.get(\"newPassword\")) == null ? null : tmp_3_0.touched) || ctx.submitted && ((tmp_3_0 = ctx.confirmNewPasswordForm.get(\"newPassword\")) == null ? null : tmp_3_0.errors)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.confirmNewPasswordForm.get(\"newPassword\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors.required);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ((tmp_5_0 = ctx.confirmNewPasswordForm.get(\"code\")) == null ? null : tmp_5_0.errors) && ((tmp_5_0 = ctx.confirmNewPasswordForm.get(\"code\")) == null ? null : tmp_5_0.touched) || ctx.submitted && ((tmp_5_0 = ctx.confirmNewPasswordForm.get(\"code\")) == null ? null : tmp_5_0.errors)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.confirmNewPasswordForm.get(\"code\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors.required);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"[_ngcontent-%COMP%]:root{--fontFamily: \\\"Verdana\\\", sans-serif;--textFontSize: 1rem;--textFontWeight: bold;--textFontSize768px: 1rem;--textFontWeight768px: bold;--textFontSize1024px: 1rem;--textFontWeight1024px: bold;--h1FontSize: 2rem;--h1FontWeight: bold;--h2FontSize: 1.8rem;--h2FontWeight: 700;--h3FontSize: 1rem;--h3FontWeight: normal;--h1FontSize768px: 2rem;--h1FontWeight768px: bold;--h1FontSize1024px: 2rem;--h1FontWeight1024px: bold;--h2FontSize768px: 1.5rem;--h2FontWeight768px: bold;--h2FontSize1024px: 1.5rem;--h2FontWeight1024px: bold;--h3FontSize768px: 1rem;--h3FontWeight768px: normal;--h3FontSize1024px: 1rem;--h3FontWeight1024px: normal;--colorPrimary: #13bf9f;--colorSecondary: #13bf9f;--tr-color: #000000;--bodyBG: #fff;--bodyFontColor: #212529;--mainBG: #f8f8f8;--menuItemHovered: white;--headerBG: #ffffff;--headerFontColor: #000000;--headerBorderTop: 0px;--footerBG: #054f72;--footerFontColor: #ffffff;--anchorFontColor: #2c2e2f;--anchorFontColorHover: #13bf9f;--button-heigh: 50px;--buttonTextColor: #fff;--buttonBorderRadius: 3px;--buttonColorTextDisabled: #fff;--buttonBGDisabled: linear-gradient(129.54deg, var(--buttonBgGradient1) 0%, var(--buttonBgGradient2) 100%);--button-opacity: .65;--button-heigh: 56px;--btn-padding: 15px 12px;--buttonBgGradient1: #13b4bf;--buttonBgGradient2: #0a8f70;--buttonBG: linear-gradient(129.54deg, var(--buttonBgGradient1) 0%, var(--buttonBgGradient2) 100%);--buttonHoveredGradient1: #059c85;--buttonHoveredGradient2: #0a8f70;--buttonHovered: linear-gradient(129.54deg, var(--buttonHoveredGradient1) 0%, var(--buttonHoveredGradient2) 100%);--buttonClickedGradient1: #13b4bf;--buttonClickedGradient2: #008073;--buttonClicked: linear-gradient(129.54deg, var(--buttonClickedGradient1) 0%, var(--buttonClickedGradient2) 100%);--secondaryButtonTextColor: #dc3545;--secondaryButtonBG: white;--secondaryButtonHoveredTextColor: white;--secondaryButtonHovered: #dc3545;--secondaryButtonClickedTextColor: white;--secondaryButtonClicked: #dc3545;--secondaryButtonBorderStyle: 1px solid #dc3545;--inputBG: white;--inputBorderStyleLeft: 1px solid #a0a0a0;--inputBorderStyleRight: 1px solid #a0a0a0;--inputBorderStyleBottom: 1px solid #a0a0a0;--inputBorderStyleTop: 1px solid #a0a0a0;--inputBorderRadius: .25rem;--selectBG: white;--selectColor: #3b4151;--selectBorderStyleLeft: none;--selectBorderStyleRight: none;--selectBorderStyleBottom: none;--selectBorderStyleTop: none;--selectBorderRadius: none;--margin-form-group: 0 0 4rem 0;--form-group-height: 3.5rem;--border-bottom: none;--margin-top-icon: 6px;--arrow-url: url(/assets/icons/arrow-down.svg)}form[_ngcontent-%COMP%]{font-weight:100}.container-fluid[_ngcontent-%COMP%]{padding:0}.sticky-top[_ngcontent-%COMP%]{z-index:1000}.card[_ngcontent-%COMP%]{border:none}.card-title[_ngcontent-%COMP%]{font-size:2rem}.card__headline[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto}.card__subtitle[_ngcontent-%COMP%]{font-size:1.1rem;color:#a0a0a0}.card[_ngcontent-%COMP%]   .card__subtitle[_ngcontent-%COMP%]{margin-bottom:1.5rem}.text-light-grey[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#a0a0a0}.text-light-green[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#059c85}.text-light-grey[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#a0a0a0}.btn[_ngcontent-%COMP%]{width:100%}.btn[_ngcontent-%COMP%]:disabled{opacity:1;background:var(--buttonBGDisabled);color:var(--buttonColorTextDisabled)}.flip-vertical[_ngcontent-%COMP%]{transform:scaleY(-1)}\"]\n    });\n  }\n  return ConfirmNewPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}