{"ast":null,"code":"import { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { InfoService } from '../../commons/info/info.service';\nimport { TestDataGenerationService } from '../../services/test.data.generation.service';\nimport { CurrencyService } from '../../services/currency.service';\nimport { SpinnerVisibilityService } from 'ng-http-loader';\nimport { CertificateDownloadService } from '../../services/certificate/certificate-download.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/test.data.generation.service\";\nimport * as i2 from \"../../commons/info/info.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"../../services/currency.service\";\nimport * as i6 from \"../../services/certificate/certificate-download.service\";\nimport * as i7 from \"ng-http-loader\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"../auth/certificate/certificate.component\";\nfunction TestDataGenerationComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", currency_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", currency_r1, \" \");\n  }\n}\nexport let TestDataGenerationComponent = /*#__PURE__*/(() => {\n  class TestDataGenerationComponent {\n    constructor(generationService, infoService, router, sanitizer, currencyService, certificateDownloadService, spinner) {\n      this.generationService = generationService;\n      this.infoService = infoService;\n      this.router = router;\n      this.sanitizer = sanitizer;\n      this.currencyService = currencyService;\n      this.certificateDownloadService = certificateDownloadService;\n      this.spinner = spinner;\n      this.unsubscribe$ = new Subject();\n    }\n    ngOnInit() {\n      this.initializeCurrenciesList();\n    }\n    ngOnDestroy() {\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    }\n    generate() {\n      return this.generationService.generateTestData(this.selectedCurrency, this.generatePaymentsFlag).pipe(takeUntil(this.unsubscribe$)).subscribe(data => {\n        const message = 'Test data has been successfully generated. The automatic download of the test yml file will start within some seconds.';\n        this.infoService.openFeedback(message);\n        setTimeout(() => {\n          const blob = new Blob([data], {\n            type: 'plain/text'\n          });\n          const link = document.createElement('a');\n          link.setAttribute('href', window.URL.createObjectURL(blob));\n          link.setAttribute('download', 'NISP-Test-Data.yml');\n          document.body.appendChild(link);\n          link.click();\n        }, 3000);\n        this.router.navigateByUrl('/accounts');\n      }, error => {\n        if (error.status === 404) {\n          this.infoService.openFeedback(\"Your Ledgers configuration should have 'develop' profile to activate this feature\", {\n            severity: 'error'\n          });\n        } else {\n          this.infoService.openFeedback('An Error occurred while generating the Test Data.', {\n            severity: 'error'\n          });\n        }\n      });\n    }\n    initializeCurrenciesList() {\n      this.spinner.show();\n      return this.currencyService.getSupportedCurrencies().pipe(takeUntil(this.unsubscribe$)).subscribe(data => {\n        this.currencyList = data;\n        this.spinner.hide();\n      }, () => {\n        this.infoService.openFeedback('An error occurred while initialize the Currencieslist', {\n          severity: 'error'\n        });\n      });\n    }\n    saveCertificateValue(certificate) {\n      this.certificate = certificate;\n    }\n    generateCertificate() {\n      if (this.certificate) {\n        const message = 'Certificate was successfully generated. The download will start automatically within the 2 seconds';\n        this.certificateDownloadService.generateAndDownloadCertificate(this.certificate, message);\n      }\n    }\n    static #_ = this.ɵfac = function TestDataGenerationComponent_Factory(t) {\n      return new (t || TestDataGenerationComponent)(i0.ɵɵdirectiveInject(i1.TestDataGenerationService), i0.ɵɵdirectiveInject(i2.InfoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DomSanitizer), i0.ɵɵdirectiveInject(i5.CurrencyService), i0.ɵɵdirectiveInject(i6.CertificateDownloadService), i0.ɵɵdirectiveInject(i7.SpinnerVisibilityService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TestDataGenerationComponent,\n      selectors: [[\"app-test-data-generation\"]],\n      decls: 22,\n      vars: 6,\n      consts: [[1, \"container-fluid\"], [1, \"card\", \"card--medium\"], [1, \"card-body\"], [1, \"header__title\", \"mb-4\"], [1, \"mb-3\"], [\"for\", \"currency\"], [\"name\", \"currency\", \"id\", \"currency\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-inline\"], [1, \"form-check\", \"me-2\", \"mb-3\"], [\"type\", \"checkbox\", \"id\", \"generatePayments\", 1, \"form-check-input\", 3, \"disabled\", \"checked\", \"change\"], [\"for\", \"generatePayments\", 1, \"form-check-label\"], [1, \"btn\", \"btn-primary\", \"my-0\", 3, \"disabled\", \"click\"], [1, \"card\", \"card--medium\", \"mt-4\"], [3, \"certificateValue\"], [1, \"btn\", \"btn-primary\", \"mb-4\", \"mt-4\", 3, \"disabled\", \"click\"], [3, \"ngValue\"]],\n      template: function TestDataGenerationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtext(4, \"Generate NISP compliant Test Data\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Desired currency*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"select\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function TestDataGenerationComponent_Template_select_ngModelChange_8_listener($event) {\n            return ctx.selectedCurrency = $event;\n          });\n          i0.ɵɵtemplate(9, TestDataGenerationComponent_option_9_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"form\", 8)(11, \"div\", 9)(12, \"input\", 10);\n          i0.ɵɵlistener(\"change\", function TestDataGenerationComponent_Template_input_change_12_listener() {\n            return ctx.generatePaymentsFlag = !ctx.generatePaymentsFlag;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"label\", 11);\n          i0.ɵɵtext(14, \" Generate Payment Data \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function TestDataGenerationComponent_Template_button_click_15_listener() {\n            return ctx.generate();\n          });\n          i0.ɵɵtext(16, \"Generate and Download\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(17, \"div\", 13)(18, \"div\", 2)(19, \"app-certificate\", 14);\n          i0.ɵɵlistener(\"certificateValue\", function TestDataGenerationComponent_Template_app_certificate_certificateValue_19_listener($event) {\n            return ctx.saveCertificateValue($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function TestDataGenerationComponent_Template_button_click_20_listener() {\n            return ctx.generateCertificate();\n          });\n          i0.ɵɵtext(21, \"Generate and Download\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedCurrency);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currencyList);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.selectedCurrency == undefined)(\"checked\", ctx.generatePaymentsFlag);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.selectedCurrency == undefined);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.certificate);\n        }\n      },\n      dependencies: [i8.NgForOf, i9.ɵNgNoValidate, i9.NgSelectOption, i9.ɵNgSelectMultipleOption, i9.SelectControlValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.NgModel, i9.NgForm, i10.CertificateComponent]\n    });\n  }\n  return TestDataGenerationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}