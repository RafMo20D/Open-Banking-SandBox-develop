{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { AccountStatus, AccountType, UsageType } from '../../models/account.model';\nimport { AccountService } from '../../services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TestDataGenerationService } from '../../services/test.data.generation.service';\nimport { InfoService } from '../../commons/info/info.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/test.data.generation.service\";\nimport * as i4 from \"../../commons/info/info.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction AccountDetailComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction AccountDetailComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const accountType_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", accountType_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", accountType_r10, \" \");\n  }\n}\nfunction AccountDetailComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountDetailComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const usageType_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", usageType_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", usageType_r11, \" \");\n  }\n}\nfunction AccountDetailComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\");\n    i0.ɵɵtext(2, \"Required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AccountDetailComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currency_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", currency_r12, \" \");\n  }\n}\nfunction AccountDetailComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\");\n    i0.ɵɵtext(2, \"Required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AccountDetailComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"IBAN Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AccountDetailComponent_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const accountStatus_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", accountStatus_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", accountStatus_r13, \" \");\n  }\n}\nfunction AccountDetailComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AccountDetailComponent = /*#__PURE__*/(() => {\n  class AccountDetailComponent {\n    constructor(accountService, router, activatedRoute, generationService, infoService) {\n      this.accountService = accountService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.generationService = generationService;\n      this.infoService = infoService;\n      this.accountForm = new UntypedFormGroup({\n        accountType: new UntypedFormControl('CASH', Validators.required),\n        usageType: new UntypedFormControl(UsageType.PRIV, Validators.required),\n        currency: new UntypedFormControl('EUR', Validators.required),\n        iban: new UntypedFormControl(null, Validators.required),\n        accountStatus: new UntypedFormControl(AccountStatus.ENABLED, Validators.required)\n      });\n      this.accountTypes = Object.keys(AccountType);\n      this.accountStatuses = Object.keys(AccountStatus);\n      this.usageTypes = Object.keys(UsageType);\n      this.submitted = false;\n      this.errorMessage = null;\n    }\n    ngOnInit() {\n      this.initializeCurrenciesList();\n      this.activatedRoute.queryParams.subscribe(params => {\n        this.userBranch = params['tppId'];\n        this.userId = params['userId'];\n      });\n    }\n    initializeCurrenciesList() {\n      return this.accountService.getCurrencies().subscribe(data => this.currencies = data, error => console.log(error));\n    }\n    get accountType() {\n      return this.accountForm.get('accountType');\n    }\n    get usageType() {\n      return this.accountForm.get('usageType');\n    }\n    get accountStatus() {\n      return this.accountForm.get('accountStatus');\n    }\n    get iban() {\n      if (this.accountForm.get('iban').value) {\n        const ibanValue = this.accountForm.get('iban').value;\n        this.accountForm.get('iban').setValue(ibanValue.replace(/\\s/g, ''));\n      }\n      return this.accountForm.get('iban');\n    }\n    get currency() {\n      return this.accountForm.get('currency');\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.errorMessage = null;\n      if (this.accountForm.invalid) {\n        return;\n      }\n      this.accountService.createAccount(this.userId, this.accountForm.getRawValue()).subscribe(data => {\n        if (data) {\n          this.infoService.openFeedback('Account has been successfully created');\n          this.router.navigate(['/accounts']);\n        } else {\n          this.infoService.openFeedback('Account creation has failed!');\n        }\n      });\n    }\n    generateIban() {\n      return this.generationService.generateIban(this.userBranch).subscribe(data => {\n        this.accountForm.get('iban').setValue(data);\n        this.infoService.openFeedback('IBAN has been successfully generated');\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/users/all']);\n    }\n    static #_ = this.ɵfac = function AccountDetailComponent_Factory(t) {\n      return new (t || AccountDetailComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TestDataGenerationService), i0.ɵɵdirectiveInject(i4.InfoService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountDetailComponent,\n      selectors: [[\"app-account-detail\"]],\n      decls: 48,\n      vars: 26,\n      consts: [[1, \"container-fluid\"], [1, \"header__title\"], [1, \"card\", \"card--small\"], [1, \"card-body--large\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\", \"required\"], [\"for\", \"accountType\", 1, \"control-label\"], [\"formControlName\", \"accountType\", \"id\", \"accountType\", 1, \"form-control\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"usageType\", 1, \"control-label\"], [\"formControlName\", \"usageType\", \"id\", \"usageType\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"currency\", 1, \"control-label\"], [\"formControlName\", \"currency\", \"id\", \"currency\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"iban\", 1, \"control-label\"], [1, \"input-group\"], [\"formControlName\", \"iban\", \"id\", \"iban\", \"type\", \"text\", 1, \"form-control\", 3, \"ngClass\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", \"bg-light\", \"text-black-50\", \"mb-0\", 3, \"click\"], [\"for\", \"accountStatus\", 1, \"control-label\"], [\"formControlName\", \"accountStatus\", \"id\", \"accountStatus\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\", \"d-flex\", \"flex-row\", \"justify-content-lg-between\"], [1, \"btn\", \"me-sm-2\", \"me-md-3\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"]],\n      template: function AccountDetailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \"Create new account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function AccountDetailComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(6, AccountDetailComponent_div_6_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n          i0.ɵɵtext(9, \"Account type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"select\", 8);\n          i0.ɵɵtemplate(11, AccountDetailComponent_option_11_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 10);\n          i0.ɵɵtemplate(13, AccountDetailComponent_div_13_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 12);\n          i0.ɵɵtext(16, \"Usage type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"select\", 13);\n          i0.ɵɵtemplate(18, AccountDetailComponent_option_18_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, AccountDetailComponent_div_19_Template, 3, 0, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 6)(21, \"label\", 15);\n          i0.ɵɵtext(22, \"Currency code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"select\", 16);\n          i0.ɵɵtemplate(24, AccountDetailComponent_option_24_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(25, AccountDetailComponent_div_25_Template, 3, 0, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 6)(27, \"label\", 17);\n          i0.ɵɵtext(28, \"IBAN\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 18);\n          i0.ɵɵelement(30, \"input\", 19);\n          i0.ɵɵelementStart(31, \"div\", 20)(32, \"button\", 21);\n          i0.ɵɵlistener(\"click\", function AccountDetailComponent_Template_button_click_32_listener() {\n            return ctx.generateIban();\n          });\n          i0.ɵɵtext(33, \" Generate IBAN \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(34, \"div\", 10);\n          i0.ɵɵtemplate(35, AccountDetailComponent_div_35_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(36, \"div\", 6)(37, \"label\", 22);\n          i0.ɵɵtext(38, \"Account status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"select\", 23);\n          i0.ɵɵtemplate(40, AccountDetailComponent_option_40_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"div\", 10);\n          i0.ɵɵtemplate(42, AccountDetailComponent_div_42_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"div\", 24)(44, \"button\", 25);\n          i0.ɵɵlistener(\"click\", function AccountDetailComponent_Template_button_click_44_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(45, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"button\", 26);\n          i0.ɵɵtext(47, \"Create account\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.accountType.invalid && (ctx.accountType.dirty || ctx.accountType.touched || ctx.submitted)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accountTypes);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.accountType.errors == null ? null : ctx.accountType.errors.required);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.usageType.invalid && (ctx.usageType.dirty || ctx.usageType.touched || ctx.submitted)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.usageTypes);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.usageType.errors == null ? null : ctx.usageType.errors.required);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.currency.invalid && (ctx.currency.dirty || ctx.currency.touched || ctx.submitted)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.currency.errors == null ? null : ctx.currency.errors.required);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.iban.invalid && (ctx.iban.dirty || ctx.iban.touched || ctx.submitted)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.iban.errors == null ? null : ctx.iban.errors.required);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.accountStatus.invalid && (ctx.accountStatus.dirty || ctx.accountStatus.touched || ctx.submitted)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accountStatuses);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.accountStatus.errors == null ? null : ctx.accountStatus.errors.required);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName],\n      styles: [\".input-group-append[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{min-width:130px;border-top-right-radius:3px;border-bottom-right-radius:3px}\"]\n    });\n  }\n  return AccountDetailComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}