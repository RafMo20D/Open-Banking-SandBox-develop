{"ast":null,"code":"import { ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { InfoModule } from './info.module';\nimport { InfoComponent } from './info.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/overlay\";\nexport let InfoService = /*#__PURE__*/(() => {\n  class InfoService {\n    constructor(overlay) {\n      this.overlay = overlay;\n      this.CORNER_OFFSET = '20px';\n      this.DEFAULT_OPTIONS = {\n        severity: 'info',\n        closable: true,\n        duration: 6000\n      };\n      this.overlayRef = this.overlay.create({\n        hasBackdrop: false,\n        scrollStrategy: this.overlay.scrollStrategies.noop(),\n        positionStrategy: this.overlay.position().global().right(this.CORNER_OFFSET).top(this.CORNER_OFFSET)\n      });\n    }\n    openFeedback(message, options) {\n      if (this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n      }\n      const portal = new ComponentPortal(InfoComponent);\n      const componentRef = this.overlayRef.attach(portal);\n      this.feedbackComp = componentRef.instance;\n      this.feedbackComp.open(message, {\n        ...this.DEFAULT_OPTIONS,\n        ...options\n      });\n      this.feedbackComp.onDestroy$.subscribe(() => {\n        this.overlayRef.detach();\n      });\n    }\n    static #_ = this.ɵfac = function InfoService_Factory(t) {\n      return new (t || InfoService)(i0.ɵɵinject(i1.Overlay));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: InfoService,\n      factory: InfoService.ɵfac,\n      providedIn: InfoModule\n    });\n  }\n  return InfoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}